pages:
  home:
    getStarted: //span[text()='Get Started Now' and ancestor::a]
  dashboard:
    projects:
      self: //div[@id='projectList']
      items: //li[not(contains(@class,'add-new')) and contains(@class,'active-project')]
      project:
        title: //h2[contains(@class,'project-title')]//input
        openProject: //a[contains(@class,'title-icon')]
        publishProject: //a[text(), 'Publish']
        edit: //div[contains(@class,'overlay-title') and text()='Edit Project']
        menu:
          self: //div[contains(@class,'project-settings']//a[contains(@class,'show-more')]
          delete: //a[contains(@class,'confirmation' and text()='Delete']
  editor:
    alert: //div[@role='alert']//div[not(@class)]
    frame:
      name: brz-ed-iframe
      addButton: //div[contains(@class,'floating-action-button')]
      workspace:
        self: //div[contains(@id,'brz-ed-page__blocks')]
        section:
          self: ${pages.editor.frame.workspace.self}//section
          container:
            self: //div[contains(@class,'brz-ed-wrap-block-item')]
            empty: //div[contains(@class,'brz-ed-sortable--empty')]
            item:
              self: //div[contains(@data-border--grey,'wrapper')]
              rightClickContext:
                self: //div[@role='menu' and contains(@class,'react-contexify')]
                menuItem:
                  title: //div//span[contains(@class,'title')]
                  keyShortcut: //div//span[contains(@class,'placeholder')]
                copy: //div[contains(@class,'react-contexify__item')]//span[text()='Copy']
                paste: //div[contains(@class,'react-contexify__item')]//span[text()='Paste']
                pasteStyles: //div[contains(@class,'react-contexify__item')]//span[text()='Paste Styles']
                duplicate: //div[contains(@class,'react-contexify__item')]//span[text()='Duplicate']
                delete: //div[contains(@class,'react-contexify__item')]//span[text()='Delete']
              toolbar:
                self: //div[contains(@class,'brz-ed-toolbar__items')]
                item: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title]
                align: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Align']
                typography:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Typography']
                  fonts:
                    self: //div[contains(@class,'brz-ed-font__typography')]//div[contains(@class,'brz-scrollbar__wrapper')]
                    font: //div[contains(@class,'brz-ed-font__name')]
                    activeFont: //div[contains(@class,'brz-ed-font__name') and contains(@class,'active')]
                    newFont: //div[contains(@class,'brz-ed-font__typography-adder')]
                  styles:
                    self: //div[contains(@class,'brz-ed-control__typography-styles')]
                    typography:
                      title: //div[contains(@class,'brz-ed-component__label')]
                      self: //div[@class='brz-ed-control__font-style']
                      settings: //div[contains(@class,'brz-ed-control__font-style--settings')]
                    size:
                      self: //div[contains(@class,'brz-ed-component__label') and text() = 'Size']/ancestor::div[contains(@class, 'brz-ed__col')]
                      unit:
                        self: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.size.self}//div[@role='combobox']
                      value:
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.size.self}//div[contains(@class,'brz-ed-control__stepper--value')]//input
                        increase: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.size.self}//div[contains(@class,'brz-ed-control__stepper--up')]
                        decrease: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.size.self}//div[contains(@class,'brz-ed-control__stepper--down')]
                    weight:
                      self: //div[contains(@class,'brz-ed-component__label') and text() = 'Weight']/ancestor::div[contains(@class, 'brz-ed__col')]
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.weight.self}//div[@role='combobox']
                    lineHgt:
                      self: //div[contains(@class,'brz-ed-component__label') and text() = 'Line Hgt.']/ancestor::div[contains(@class, 'brz-ed__col')]
                      value:
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.lineHgt.self}//div[contains(@class,'brz-ed-control__stepper--value')]//input
                        increase: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.lineHgt.self}//div[contains(@class,'brz-ed-control__stepper--up')]
                        decrease: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.lineHgt.self}//div[contains(@class,'brz-ed-control__stepper--down')]
                    letterSp:
                      self: //div[contains(@class,'brz-ed-component__label') and text() = 'Letter Sp.']/ancestor::div[contains(@class, 'brz-ed__col')]
                      value:
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.letterSp.self}//div[contains(@class,'brz-ed-control__stepper--value')]//input
                        increase: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.letterSp.self}//div[contains(@class,'brz-ed-control__stepper--up')]
                        decrease: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.letterSp.self}//div[contains(@class,'brz-ed-control__stepper--down')]
                colors:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Colors']
                  normal: //ul[contains(@class,'brz-ed-control__tabs__left')]//li[@title='Normal']
                  hover: //ul[contains(@class,'brz-ed-control__tabs__left')]//li[@title='Hover']
                  color:
                    type: //div[@role='combobox' and ancestor::div[contains(@class,'brz-ed-control__colorPickerSelect--select')]]
                    gradientType: //div[@role='combobox' and ancestor::div[contains(@class,'brz-ed-control__backgroundColor__gradientType--linear')]]
                    angle: //div[contains(@class, 'brz-ed-control__backgroundColor--degree')]//input[@type='number']
                    value: //div[contains(@class, 'brz-ed-control__color-picker-inputs')]//input[@type='text']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    background:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: //span[text()='Background']
                      type: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.type}
                      gradientType: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.gradientType}
                      angle: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.angle}
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.value}
                    border:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: //span[text()='Border']
                      size: //div[contains(@class, 'brz-ed-control__border__width')]//input[@type='number']
                      type: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.type}
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.value}
                      borderWidthControl:
                        self: //button[contains(@class, 'brz-ed-control__border__widthType')]
                        right: //div[contains(@class,'brz-ed-control__border__width')]//input[2]
                        left: //div[contains(@class,'brz-ed-control__border__width')]//input[4]
                        up: //div[contains(@class,'brz-ed-control__border__width')]//input[1]
                        down: //div[contains(@class,'brz-ed-control__border__width')]//input[3]
                    shadow:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: //span[text()='Shadow']
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.value}
                      type: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.type}
                      blurRadius: //div[contains(@class,'brz-ed-option__input-number-wrap')]/input[1]
                      verticalOffset: //div[contains(@class,'brz-ed-option__input-number-wrap')]/input[3]
                      horizontalOffset: //div[contains(@class,'brz-ed-option__input-number-wrap')]/input[4]
                      spreadRadius: //div[contains(@class,'brz-ed-option__input-number-wrap')]/input[2]
                    overlay:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: //span[text()='Overlay']
                      type: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.type}
                      gradientType: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.gradientType}
                      angle: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.angle}
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.value}
                settings:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Settings']
                  scrollbar:
                    self: //div[contains(@class,'brz-scrollbar__view')]
                    tabs: //div[contains(@class,'brz-ed-control__tabs')]//li
                    styling:
                      self: //span[text()='Styling' and ancestor::li]
                      tabs: //ul[contains(@class,'brz-ed-control__tabs')]//li
                      basic:
                        self: //div[contains(@class,'brz-ed-control__tabs-wrapper') and //span[text()='Basic']]
                        tab: //span[text()='Basic' and ancestor::li]
                        padding:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.self}//span[text()='Padding']/ancestor::div[contains(@class,'brz-ed-option-type__padding-dev')]
                          items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.self}//div[contains(@class,'brz-ed-control__radio-group2__item')]
                          spacing:
                            all:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.self}//div[contains(@class,'brz-ed__control--number-slider')]
                              unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.all.self}//div[@role='combobox']
                              value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.all.self}//input[@type='range']
                            individual:
                              top:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-top')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.top.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.top.self}//input[@type='range']
                              right:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-right')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.right.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.right.self}//input[@type='range']
                              bottom:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-bottom')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.bottom.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.bottom.self}//input[@type='range']
                              left:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-left')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.left.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.left.self}//input[@type='range']
                        margin:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.self}//span[text()='Margin']/ancestor::div[contains(@class,'brz-ed-option-type__margin-dev')]
                          items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.self}//div[contains(@class,'brz-ed-control__radio-group2__item')]
                          spacing:
                            all:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.self}//div[contains(@class,'brz-ed__control--number-slider')]
                              unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.all.self}//div[@role='combobox']
                              value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.all.self}//input[@type='range']
                            individual:
                              top:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-top')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.top.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.top.self}//input[@type='range']
                              right:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-right')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.right.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.right.self}//input[@type='range']
                              bottom:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-bottom')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.bottom.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.bottom.self}//input[@type='range']
                              left:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-left')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.left.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.left.self}//input[@type='range']
                        positionGroup:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.self}//span[text()='Position']/ancestor::div[contains(@class,'brz-ed-option-type__group-dev')]
                          position:
                            self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.self}//div[contains(@class,'brz-ed-option-type__select-dev') and .//span[text()='Position']]//div[@role='combobox']
                            item: //li[contains(@class,'brz-ed-control__multiSelect__option')]
                            width:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.self}//span[text()='Width']/ancestor::div[contains(@class,'brz-ed-option-type__slider-dev')]
                              unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.width.self}//div[@role='combobox']
                              value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.width.self}//input[@type='range']
                            horizontalOffset:
                              self: //span[text()='Horizontal Offset']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup-dev')]
                              items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.horizontalOffset.self}//div[contains(@class,'brz-ed-control__radio-group2__item')]
                            horizontalOffsetValue:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.horizontalOffset.self}/following-sibling::div[1]
                              unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.horizontalOffsetValue.self}//div[@role='combobox']
                              value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.horizontalOffsetValue.self}//input[@type='range']
                            verticalOffset:
                              self: //span[text()='Vertical Offset']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup-dev')]
                              items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.verticalOffset.self}//div[contains(@class,'brz-ed-control__radio-group2__item')]
                            verticalOffsetValue:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.verticalOffset.self}/following-sibling::div
                              unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.verticalOffsetValue.self}//div[@role='combobox']
                              value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.verticalOffsetValue.self}//input[@type='range']
                      advanced:
                        self: //span[text()='Advanced' and ancestor::li]
                        showOnDesktop: //span[text()='Show on Desktop']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//div[contains(@class,'brz-ed-control__switch')]
                        zIndex: //span[text()='Z‑index']/ancestor::div[contains(@class,'brz-ed-option-type__slider-dev')]//input[@type='range']
                        cssId:
                          self: //span[text()='CSS ID']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.cssId.self}//input
                          population:
                            self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.cssId.self}//div[contains(@class,'brz-control__select-current__icon')]
                            items: //div[contains(@class,'brz-control__select-option') and @title]
                        cssClass:
                          self: //span[text()='CSS Class']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.cssClass.self}//input
                          population:
                            self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.cssClass.self}//div[contains(@class,'brz-control__select-current__icon')]
                            items: //div[contains(@class,'brz-control__select-option') and @title]
                        customAttribute:
                          self: //span[text()='Custom Attributes']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.customAttribute.self}//input
                          population:
                            self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.customAttribute.self}//div[contains(@class,'brz-control__select-current__icon')]
                            items: //div[contains(@class,'brz-control__select-option') and @title]
                        customCss:
                          self: //span[text()='Custom CSS']/ancestor::div
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.customCss.self}//input
                        hoverTransition: //span[text()='Hover Transition']/ancestor::div[contains(@class,'brz-ed-option-type__slider-dev')]//input[@type='range']
                    effects:
                      self: //span[text()='Effects' and ancestor::li]
                      tabContent: //div[contains(@class,'brz-ed-control__tab__content')]
                      tabs: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//ul[contains(@class,'brz-ed-control__tabs')]//li
                      propertiesContent: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//div[contains(@class,'brz-ed-control__group')]
                      gridContent: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//div[contains(@class,'grid')]
                      entrance:
                        self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//span[text()='Entrance' and ancestor::li]
                        grid:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.gridContent}
                          items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.entrance.grid.self}//div
                          item: //div[contains(text(),'%s')]/ancestor::div[contains(@class,'brz-ed--fat-icon ')]
                          activeItem: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.scroll.grid.items}//div[contains(@class,'text-right-sidebar-item--active')]
                        properties:
                          direction: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Direction']]//div[@role='combobox']
                          big: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Big']]//div[contains(@class,'brz-ed-control__switch')]
                          duration: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Duration']]//input[@type='range']
                          delay: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Delay']]//input[@type='range']
                          infiniteAnimation: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Infinite Animation']]//div[contains(@class,'brz-ed-control__switch')]
                      hover:
                        self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//span[text()='Hover' and ancestor::li]
                        grid:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.gridContent}
                          items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.hover.grid.self}//div
                          item: //div[contains(text(),'%s')]/ancestor::div[contains(@class,'brz-ed--fat-icon ')]
                          activeItem: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.scroll.grid.items}//div[contains(@class,'text-right-sidebar-item--active')]
                        properties:
                          style: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//span[text()='Style']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//div[@role='combobox']
                          direction: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.entrance.properties.direction}
                          duration: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.entrance.properties.duration}
                          infiniteAnimation: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.entrance.properties.infiniteAnimation}
                      scroll:
                        self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//span[text()='Scroll' and ancestor::li]
                        grid:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.gridContent}
                          items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.scroll.grid.self}//div
                          item: //div[contains(text(),'%s')]/ancestor::div[contains(@class,'brz-ed--fat-icon ')]
                          activeItem: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.scroll.grid.items}//div[contains(@class,'text-right-sidebar-item--active')]
                        properties:
                          direction: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.entrance.properties.direction}
                          x: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='X']]//div[@role='combobox']
                          y: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Y']]//div[@role='combobox']
                          speed: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Speed']]//input[@type='range']
                          level: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Level']]//input[@type='range']
                          start: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed__control--range-slider__sliders')]//input[not(contains(@class,'brz-ed__control--range-slider__to'))]
                          stop: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed__control--range-slider__sliders')]//input[contains(@class,'brz-ed__control--range-slider__to')]
                    align: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//div[contains(text(). 'Align' and ancestor::div[contains(@class,'brz-ed-control__right-sidebar-tabs__icon')]]
                    unlock: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//div[contains(text(). 'lock' and ancestor::div[contains(@class,'brz-ed-control__right-sidebar-tabs__icon')]]
                  width:
                    value: //span[text()='Width']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//input[@type='range']
                    unit:
                      self: //span[text()='Width']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//div[@role='combobox']
                      item: //li[contains(@class,'brz-ed-control__multiSelect__option')]
                  height:
                    value: //span[text()='Height']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//input[@type='range']
                    unit:
                      self: //span[text()='Height']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//div[@role='combobox']
                      item: //li[contains(@class,'brz-ed-control__multiSelect__option')]
                counter:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Counter']
                  tabs:
                    self: //ul[contains(@class,'brz-ed-control__tabs__top')]
                    counter:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.self}//span[text()='Counter']
                      style: //div[contains(@class,'brz-ed-option-type__radioGroup-dev')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      start:
                        self: //span[text()='Start']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.counter.start.self}//input[@type='number']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.counter.start.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      end:
                        self: //span[text()='End']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.counter.end.self}//input[@type='number']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.counter.end.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      duration: //span[text()='Duration']/ancestor::div[contains(@class,'brz-ed-option-type__slider-dev')]//input[@type='number']
                    advanced:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.self}//span[text()='Advanced']
                      prefix:
                        self: //span[text()='Prefix']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.advanced.prefix.self}//input[@type='text']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.advanced.prefix.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      suffix:
                        self: //span[text()='Suffix']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.advanced.suffix.self}//input[@type='text']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.advanced.suffix.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      separator:
                        self: //span[text()='Separator']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.advanced.separator.self}//input[@type='text']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.advanced.separator.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                button:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Button']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    button:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.self}//span[text()='Button']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      size:
                        self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-option-type__group-dev')]
                        items: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.size.self}//div[contains(@class,'brz-ed-control__radio-group2__item')]
                        custom:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.size.self}
                          width:
                            self: //div[contains(@class,'brz-ed-option-type__slider-dev') and .//span[text()='Width']]
                            value: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.size.custom.width.self}//input[@type='range']
                            unit: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.size.custom.width.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                          height:
                            self: //div[contains(@class,'brz-ed-option-type__slider-dev') and .//span[text()='Height']]
                            value: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.size.custom.height.self}//input[@type='range']
                            unit: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.size.custom.height.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                      fill: //span[text()='Fill']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup-dev')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      corner:
                        self: //span[text()='Corner']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup-dev')]//div[contains(@class,'brz-ed-control__radio-group2')]//div
                        custom:
                          self: //span[text()='Corner']/ancestor::div[contains(@class,'brz-ed-option-type__group-dev')]
                          radiusValue: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.corner.custom.self}//input[@type='range']
                    icon:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.self}//span[text()='Icon']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      icon:
                        self: //span[text()='Icon']/ancestor::div[contains(@class,'brz-ed-option-type__iconSetter-dev')]
                        picker:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.icon.self}//div[contains(@class,'brz-ed-control__icon-setter__box')]
                          popUp:
                            self: //div[contains(@class,'brz-ed-popup-icons')]
                            tabs: //div[contains(@class,'brz-ed-popup-header__tabs')]//div
                            closeButton: //div[contains(@class,'brz-ed-popup-btn-close')]
                            categories:
                              self: //div[contains(@class,'brz-ed-popup__select--block-categories')]
                              items: //div[contains(@class,'brz-control__select-option')]
                            search: //input[@placeholder='Enter Search Keyword']
                            grid:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.icon.picker.popUp.self}//div[contains(@class,'brz-ed-popup-icons__grid')]
                              items: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.icon.picker.popUp.grid.self}//div[contains(@class, 'brz-ed-popup-icons__grid__item')]
                              item: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.icon.picker.popUp.grid.items}//i[contains(@class,'%s')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.icon.self}//div[contains(@class,'brz-ed-control__focal-point__delete')]
                      position: //span[text()='Position']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup-dev')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      size:
                        self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-option-type__group-dev')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                        custom:
                          self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-option-type__group-dev')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.size.custom.self}//input[@type='range']
                      spacing:
                        self: //div[contains(@class,'brz-ed-option-type__slider-dev') and .//span[text()='Spacing']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.spacing.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.spacing.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                image:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Image']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    image:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.self}//span[text()='Image']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      image:
                        self: //span[text()='Image']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.image.image.self}//div[contains(@class,'brz-ed-control__focal-point__upload')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.image.image.self}//div[contains(@class,'brz-ed-control__focal-point__delete')]
                      zoom: //span[text()='Zoom']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//input[@type='range']
                      openInLightBox: //span[text()='Open in Lightbox']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//div[contains(@class,'brz-ed-control__switch')]
                    mask:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.self}//span[text()='Mask']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      shape: //span[text()='Shape']/ancestor::div[contains(@class,'brz-ed-option-type__select-dev')]//div[@role='combobox']
                      size:
                        common: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-control__group')]
                        self: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.mask.size.common}//div[contains(@class,'brz-ed-option-type__select-dev')]//div[@role='combobox']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.mask.size.common}//div[contains(@class,'brz-ed-option-type__slider-dev')]//div[@role='combobox']
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.mask.size.common}//input[@type='range']
                      position: //span[text()='Position']/ancestor::div[contains(@class,'brz-ed-option-type__select-dev')]//div[@role='combobox']
                      repeat: //span[text()='Repeat']/ancestor::div[contains(@class,'brz-ed-option-type__select-dev')]//div[@role='combobox']
                      image:
                        self: //span[text()='Image']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.image.image.self}//div[contains(@class,'brz-ed-control__focal-point__upload')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.image.image.self}//div[contains(@class,'brz-ed-control__focal-point__delete')]
                link:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Link']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    url:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='URL']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      linkTo:
                        self: //span[text()='Link to']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.url.linkTo.self}//input
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.url.linkTo.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      openInNewTab: //span[text()='Open In New Tab']/ancestor::div[contains(@class,'brz-ed-option-type__switch-dev')]//div[contains(@class,' brz-ed-control__switch')]
                      makeItNoFollow: //span[text()='Make it Nofollow']/ancestor::div[contains(@class,'brz-ed-option-type__switch-dev')]//div[contains(@class,' brz-ed-control__switch')]
                    block:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='Block']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      block:
                        self: //div[text()='Block']/ancestor::div[contains(@class,'brz-ed-option')]
                        items: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.block.block.self}//div[contains(@class,'brz-ed-option__block-thumbnail-item')]
                    popup:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='Popup']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      popup:
                        self: //span[text()='Popup']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.popup.popup.self}//div[contains(@class,'brz-ed-control__focal-point__upload')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.popup.popup.self}//div[contains(@class,'brz-ed-control__focal-point__delete')]
                    file:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='File']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      file:
                        self: //span[text()='File']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.file.file.self}//div[contains(@class,'brz-ed-control__file-upload__wrapper')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.file.file.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--remove')]
                        fileName: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.file.file.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--title')]
    bottomPanel:
      self: //div[contains(@class,'brz-ed-fixed-bottom-panel')]
      showHiddenElements: ${pages.editor.bottomPanel.self}//li[@title='Show Hidden Elements']
      undo: ${pages.editor.bottomPanel.self}//li[contains(@title,'Undo')]
      redo: ${pages.editor.bottomPanel.self}//li[contains(@title,'Redo')]
      preview: ${pages.editor.bottomPanel.self}//li[contains(@title,'Preview')]
      saveDraft: ${pages.editor.bottomPanel.self}//li//span[text()='Save Draft']
      update: ${pages.editor.bottomPanel.self}//li//span[text()='Update']
      saveDraftButton: ${pages.editor.bottomPanel.self}//button
      saveMenu:
        self: //div[contains(@class,'brz-ed-tooltip__content-portal')]
        menuItems: ${pages.editor.bottomPanel.saveMenu.self}//div[contains(@class,'brz-ed-tooltip__item')]//span
        clearLayout: ${pages.editor.bottomPanel.saveMenu.self}//span[@title='Clear Layout']
        saveLayout: ${pages.editor.bottomPanel.saveMenu.self}//span[@title='Save Layout']
        publishPage: ${pages.editor.bottomPanel.saveMenu.self}//span[@title='Publish Page']
        switchToDraft: ${pages.editor.bottomPanel.saveMenu.self}//span[@title='Switch to Draft']
    sidebar:
      self: //div[contains(@class,'brz-ed-sidebar')]
      addItems:
        self: ${pages.editor.sidebar.self}//div[@title='Add Elements']
        content:
          self: //div[contains(@class,'brz-ed-sidebar__content')]
          header:
            self: ${pages.editor.sidebar.addItems.content.self}//div[contains(@class,'brz-ed-sidebar__header')]
          main:
            self: ${pages.editor.sidebar.addItems.content.self}//div[contains(@class,'brz-ed-sidebar__main')]
            columns: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='columns']
            row: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='row']
            text: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='text']
            image: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='image']
            button: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='button']
            icon: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='icon']
            spacer: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='spacer']
            map: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='map']
            form: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='form']
            line: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='line']
            menuSimple: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='MenuSimple']
            translation: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='translation']
            video: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='video']
            audio: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='audio']
            iconText: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='iconText']
            embedCode: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='embedCode']
            alert: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='Alert']
            counter: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='counter']
            countdown2: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='countdown2']
            progressBar: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='progressBar']
            tabs: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='tabs']
            accordion: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='accordion']
            postTitle: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='PostTitle']
            posts: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='Posts']
            assetsPosts: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='AssetsPosts']
    editorPopUp:
      self: //div[contains(@class,'brz-ed-popup-two-wrapper brz-ed-popup-two-blocks')]
      header:
        self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-header')]
        search: ${pages.editor.editorPopUp.self}//input[contains(@class,'brz-input brz-ed-popup-two__input')]
        tabs:
          self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-tab-item')]
          tab:
            icon: //div[contains(@class,'brz-ed-popup-two-tab-icon')]
            name: //div[contains(@class,'brz-ed-popup-two-tab-name')]
      body:
        self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-body')]
        sidebar:
          self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-body__sidebar')]
        content:
          self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-body__content')]
          createYourOwn: //p[text()='Create your own']
  publish:
    section:
      self: //div[contains(@class,'brz-root__container')]//section
      container:
        self: //div[contains(@class,'brz-container')]
        item:
          self: ${pages.publish.section.container.self}//div[@data-custom-id or @id]