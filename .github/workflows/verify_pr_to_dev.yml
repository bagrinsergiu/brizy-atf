name: Verify merge requests and publish allure reports

on:
  pull_request:
    types: [ closed, labeled ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  run_tests:
    runs-on: [ self-hosted, builder, office-server ]
    concurrency:
      group: ${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    if: ${{ github.event.label.name == 'review' }}

    steps:
      - name: Generate Comments In progress...
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          message: |
            Report: In Progress...

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.9.3

      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: adopt
          cache: maven

      - name: Compile and install dependencies
        run: mvn -T 4C clean compile install -DskipTests

      - name: Download playwright dependencies
        run: mvn -T 4C exec:java -pl web-test -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install-deps msedge chrome"

      - name: Run tests
        run: mvn -T 4C test -DbaseUrl=https://www.brizy.cloud/projects/18098294/editor/page/3672626 -q

      - name: Build executor properties
        if: always()
        run: |
          echo '{' > executor.json
          echo '  "name": "GitHub Actions",' >> executor.json
          echo '  "reportName": "Brizy Automation Tests",' >> executor.json
          echo '  "type": "github",' >> executor.json
          echo '  "reportName": "Brizy Regression run",' >> executor.json
          echo '  "url": "https://bagrinsergiu.github.io/brizy-atf",' >> executor.json
          echo '  "baseUrl": "https://www.brizy.cloud/projects/18098294/editor/page/3672626",' >> executor.json
          echo '  "reportUrl": "https://bagrinsergiu.github.io/brizy-atf/${{ github.run_number }}",' >> executor.json
          echo '  "buildUrl": "https://github.com/bagrinsergiu/brizy-atf/actions/runs/${{ github.run_id }}"' >> executor.json
          echo '}' >> executor.json
          mv ./executor.json ./web-test/target/allure-results
          cat ./web-test/target/allure-results/executor.json
          ls -ltrh /root/.allure/

      - name: Build environment properties
        if: always()
        run: |
          echo "VM_Name: $(hostname)" > environment.properties
          echo "Total_Memory: $(free -h | awk '/Mem:/ {print $2}')" >> environment.properties
          echo "Used_Memory: $(free -h | awk '/Mem:/ {print $3}')" >> environment.properties
          echo "Processor: $(lscpu | grep 'Model name' | sed 's/Model name://')" >> environment.properties
          echo "Number_Of_Processors: $(nproc)" >> environment.properties
          echo "OS_Version: $(lsb_release -d | sed 's/Description:\s*//')" >> environment.properties
          mv ./environment.properties ./web-test/target/allure-results
          cat ./web-test/target/allure-results/environment.properties

      - name: Build launch json
        if: always()
        run: |
          echo '{' > launch.json
          echo '  "name": "Demo Allure tests"' >> launch.json
          echo '}' >> launch.json
          mv ./launch.json ./web-test/target/allure-results
          cat ./web-test/target/allure-results/launch.json

      - name: Generate allure reports
        if: always()
        run: mvn -pl web-test allure:report

      - name: Declare Report variables
        id: vars
        if: always()
        shell: bash
        run: |
          echo "CONTAINER_NAME=atf-report-pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          echo "IMAGE=brizy/atf-report:pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          echo "NETWORK=traefik" >> $GITHUB_OUTPUT
          echo "DOMAIN=atf-pr-${{ github.event.pull_request.number }}.cloud.office.brizy.org" >> $GITHUB_OUTPUT

      - name: Build Report Container
        id: build-image
        if: always()
        shell: bash
        run: |
          docker stop "${{ steps.vars.outputs.CONTAINER_NAME }}" || true
          docker rm "${{ steps.vars.outputs.CONTAINER_NAME }}" || true
          docker rmi "${{ steps.vars.outputs.IMAGE }}" || true

          docker build \
          -t "${{ steps.vars.outputs.IMAGE }}" \
          -f dockerfiles/Dockerfile .
          
          docker run -d \
            --network="${{ steps.vars.outputs.NETWORK }}" \
            --network-alias="${{ steps.vars.outputs.CONTAINER_NAME }}" \
            --name="${{ steps.vars.outputs.CONTAINER_NAME }}" \
            --cpus=3 \
            --memory=2g \
            -e "MAX_CPUS=2" \
            --label "traefik.docker.network"="${{ steps.vars.outputs.NETWORK }}" \
            --label "traefik.enable"="true" \
            --label "traefik.frontend.rule"="Host:${{ steps.vars.outputs.DOMAIN }}" \
            --label "traefik.port"="80" \
            "${{ steps.vars.outputs.IMAGE }}"

      - name: Generate Report Url
        uses: marocchino/sticky-pull-request-comment@v2
        if: always()
        with:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          message: |
            Report: <http://${{ steps.vars.outputs.DOMAIN }}:8080>

  cleanup:
    name: Cleanup Reports
    runs-on: [ self-hosted, builder, office-server ]
    if: ${{ github.event.action == 'closed' || github.event.pull_request.merged == true }}
    steps:
      - uses: actions/checkout@v3

      - name: Declare Report variables
        id: vars
        shell: bash
        run: |
          echo "CONTAINER_NAME=atf-report-pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          echo "IMAGE=brizy/atf-report:pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT

      - name: Clean Report
        id: clean
        shell: bash
        run: |
          docker stop "${{ steps.vars.outputs.CONTAINER_NAME }}" || true
          docker rmi --force "${{ steps.vars.outputs.IMAGE }}" || true

      - name: Generate Report Url
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          message: |
            Report: Not available