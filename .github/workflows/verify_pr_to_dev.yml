name: Verify merge requests and publish allure reports

on:
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  run_tests:
    runs-on: [ self-hosted, builder, office-server ]

    steps:
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.9.3

      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: adopt
          cache: maven

      - name: Compile and install dependencies
        run: mvn clean compile install -DskipTests

      - name: Download playwright dependencies
        run: mvn exec:java -pl web-test -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install-deps"

      - name: Run tests
        run: mvn test

      - name: Get Allure history
        if: always()
        uses: actions/checkout@v2
        continue-on-error: true
        with:
          ref: allure-reports-history
          path: allure-reports-history

      - name: Check and clear allure history
        if: always()
        run: |
          mkdir -p ./allure-reports-history
          mkdir -p ./allure-history
          cp -r ./allure-reports-history/. ./allure-history

          echo "count folders in allure-history: $( ( ls ./allure-history | wc -l ) )"
          echo "keep reports count 20"
          echo "if $( ( ls ./allure-history | wc -l ) ) > 21"
          if (( $( ( ls ./allure-history | wc -l ) ) > 20 )); then
            cd ./allure-history
            echo "remove index.html last-history"
            rm index.html last-history -rv
            echo "remove old reports"
            ls | sort -n | head -n -$((23-2)) | xargs rm -rv;
            cd ..
          fi

          echo "<!DOCTYPE html><meta charset=\"utf-8\"><meta http-equiv=\"refresh\" content=\"0; URL=https://bagrinsergiu.github.io/brizy-atf/${{ github.run_number }}/\">" > ./allure-history/index.html # path
          echo "<meta http-equiv=\"Pragma\" content=\"no-cache\"><meta http-equiv=\"Expires\" content=\"0\">" >> ./allure-history/index.html

      - name: Build executor properties
        if: always()
        run: |
          echo '{' > executor.json
          echo '  "name": "GitHub Actions",' >> executor.json
          echo '  "reportName": "Brizy Automation Tests",' >> executor.json
          echo '  "type": "github",' >> executor.json
          echo '  "reportName": "Brizy Regression run",' >> executor.json
          echo '  "url": "https://bagrinsergiu.github.io/brizy-atf",' >> executor.json
          echo '  "baseUrl": "https://www.brizy.cloud/projects/18098294/editor/page/3672626",' >> executor.json
          echo '  "reportUrl": "https://bagrinsergiu.github.io/brizy-atf/${{ github.run_number }}",' >> executor.json
          echo '  "buildUrl": "https://github.com/bagrinsergiu/brizy-atf/actions/runs/${{ github.run_id }}"' >> executor.json
          echo '}' >> executor.json
          mv ./executor.json ./web-test/target/allure-results
          cat ./web-test/target/allure-results/executor.json
          ls -ltrh /root/.allure/

      - name: Build environment properties
        if: always()
        run: |
          echo "VM_Name: $(hostname)" > environment.properties
          echo "Total_Memory: $(free -h | awk '/Mem:/ {print $2}')" >> environment.properties
          echo "Used_Memory: $(free -h | awk '/Mem:/ {print $3}')" >> environment.properties
          echo "Processor: $(lscpu | grep 'Model name' | sed 's/Model name://')" >> environment.properties
          echo "Number_Of_Processors: $(nproc)" >> environment.properties
          echo "OS_Version: $(lsb_release -d | sed 's/Description:\s*//')" >> environment.properties
          mv ./environment.properties ./web-test/target/allure-results
          cat ./web-test/target/allure-results/environment.properties

      - name: Build launch json
        if: always()
        run: |
          echo '{' > launch.json
          echo '  "name": "Demo Allure tests"' >> launch.json
          echo '}' >> launch.json
          mv ./launch.json ./web-test/target/allure-results
          cat ./web-test/target/allure-results/launch.json

      - name: Copy old history to recent allure results folder
        if: always()
        run: |
          cp -r ./allure-reports-history/last-history/. ./web-test/target/allure-results/history

      - name: Generate allure reports
        if: always()
        run: mvn -pl web-test allure:report

      - name: Copy allure results to publish directory
        if: always()
        run: |
          cp -r ./web-test/target/allure-report/. ./allure-history/${{ github.run_number }}
          echo "copy allure-report history to /allure-history/last-history"
          cp -r ./web-test/target/allure-report/history/. ./allure-history/last-history

      - name: Deploy reports to Github Pages
        if: always()
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          branch: allure-reports-history
          folder: allure-history
          force: true

      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v3

      - name: Upload artifact
        if: always()
        uses: actions/upload-pages-artifact@v2
        with:
          path: './allure-history'

      - name: Deploy to GitHub Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Post the link to the report
        if: always()
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.PERSONAL_TOKEN}}
          context: 'Test report'
          state: 'success'
          target_url: https://bagrinsergiu.github.io/brizy-atf/${{ github.run_number }}/index.html