pages:
  home:
    getStarted: //span[text()='Get Started Now' and ancestor::a]
  dashboard:
    projects:
      self: //div[@id='projectList']
      items: //li[not(contains(@class,'add-new')) and contains(@class,'active-project')]
      project:
        title: //h2[contains(@class,'project-title')]//input
        openProject: //a[contains(@class,'title-icon')]
        publishProject: //a[text(), 'Publish']
        edit: //div[contains(@class,'overlay-title') and text()='Edit Project']
        menu:
          self: //div[contains(@class,'project-settings']//a[contains(@class,'show-more')]
          delete: //a[contains(@class,'confirmation' and text()='Delete']
  editor:
    frame:
      name: brz-ed-iframe
      addButton: //div[contains(@class,'floating-action-button')]
      workspace:
        self: //div[contains(@id,'brz-ed-page__blocks')]
        section:
          self: ${pages.editor.frame.workspace.self}//section
          container:
            self: //div[contains(@class,'brz-ed-wrap-block-item')]
            empty: //div[contains(@class,'brz-ed-sortable--empty')]
            item:
              self: //div[contains(@data-border--grey,'wrapper')]
              rightClickContext:
                self: //div[@role='menu' and contains(@class,'react-contexify')]
                menuItem:
                  title: //div//span[contains(@class,'title')]
                  keyShortcut: //div//span[contains(@class,'placeholder')]
                copy: //div[contains(@class,'react-contexify__item')]//span[text()='Copy']
                paste: //div[contains(@class,'react-contexify__item')]//span[text()='Paste']
                pasteStyles: //div[contains(@class,'react-contexify__item')]//span[text()='Paste Styles']
                duplicate: //div[contains(@class,'react-contexify__item')]//span[text()='Duplicate']
                delete: //div[contains(@class,'react-contexify__item')]//span[text()='Delete']
              toolbar:
                self: //div[contains(@class,'brz-ed-toolbar__items')]
                item: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title]
                align: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Align']
                typography:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Typography']
                  fonts:
                    self: //div[contains(@class,'brz-ed-font__typography')]//div[contains(@class,'brz-scrollbar__wrapper')]
                    font: //div[contains(@class,'brz-ed-font__name')]
                    activeFont: //div[contains(@class,'brz-ed-font__name') and contains(@class,'active')]
                    newFont: //div[contains(@class,'brz-ed-font__typography-adder')]
                  styles:
                    self: //div[contains(@class,'brz-ed-control__typography-styles')]
                    typography:
                      title: //div[contains(@class,'brz-ed-component__label')]
                      self: //div[@class='brz-ed-control__font-style']
                      settings: //div[contains(@class,'brz-ed-control__font-style--settings')]
                    size:
                      self: //div[contains(@class,'brz-ed-component__label') and text() = 'Size']/ancestor::div[contains(@class, 'brz-ed__col')]
                      unit:
                        self: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.size.self}//div[@role='combobox']
                      value:
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.size.self}//div[contains(@class,'brz-ed-control__stepper--value')]//input
                        increase: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.size.self}//div[contains(@class,'brz-ed-control__stepper--up')]
                        decrease: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.size.self}//div[contains(@class,'brz-ed-control__stepper--down')]
                    weight:
                      self: //div[contains(@class,'brz-ed-component__label') and text() = 'Weight']/ancestor::div[contains(@class, 'brz-ed__col')]
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.weight.self}//div[@role='combobox']
                    lineHgt:
                      self: //div[contains(@class,'brz-ed-component__label') and text() = 'Line Hgt.']/ancestor::div[contains(@class, 'brz-ed__col')]
                      value:
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.lineHgt.self}//div[contains(@class,'brz-ed-control__stepper--value')]//input
                        increase: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.lineHgt.self}//div[contains(@class,'brz-ed-control__stepper--up')]
                        decrease: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.lineHgt.self}//div[contains(@class,'brz-ed-control__stepper--down')]
                    letterSp:
                      self: //div[contains(@class,'brz-ed-component__label') and text() = 'Letter Sp.']/ancestor::div[contains(@class, 'brz-ed__col')]
                      value:
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.letterSp.self}//div[contains(@class,'brz-ed-control__stepper--value')]//input
                        increase: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.letterSp.self}//div[contains(@class,'brz-ed-control__stepper--up')]
                        decrease: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.letterSp.self}//div[contains(@class,'brz-ed-control__stepper--down')]
                colors:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Colors']
                  normal: //ul[contains(@class,'brz-ed-control__tabs__left')]//li[@title='Normal']
                  hover: //ul[contains(@class,'brz-ed-control__tabs__left')]//li[@title='Hover']
                  color:
                    type: //div[@role='combobox' and ancestor::div[contains(@class,'brz-ed-control__colorPickerSelect--select')]]
                    gradientType: //div[@role='combobox' and ancestor::div[contains(@class,'brz-ed-control__backgroundColor__gradientType--linear')]]
                    angle: //div[contains(@class, 'brz-ed-control__backgroundColor--degree')]//input[@type='number']
                    value: //div[contains(@class, 'brz-ed-control__color-picker-inputs')]//input[@type='text']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    background:
                      self: //span[text()='Background']
                      type: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.type}
                      gradientType: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.gradientType}
                      angle: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.angle}
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.value}
                    border:
                      self: //span[text()='Border']
                      size: //div[contains(@class, 'brz-ed-control__border__width')]//input[@type='number']
                      type: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.type}
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.value}
                      borderWidthControl:
                        self: //button[contains(@class, 'brz-ed-control__border__widthType')]
                        right: //div[contains(@class,'brz-ed-control__border__width')]//input[2]
                        left: //div[contains(@class,'brz-ed-control__border__width')]//input[4]
                        up: //div[contains(@class,'brz-ed-control__border__width')]//input[1]
                        down: //div[contains(@class,'brz-ed-control__border__width')]//input[3]
                    shadow:
                      self: //span[text()='Shadow']
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.value}
                      type: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.type}
                      blurRadius: //div[contains(@class,'brz-ed-option__input-number-wrap')]/input[1]
                      verticalOffset: //div[contains(@class,'brz-ed-option__input-number-wrap')]/input[3]
                      horizontalOffset: //div[contains(@class,'brz-ed-option__input-number-wrap')]/input[4]
                      spreadRadius: //div[contains(@class,'brz-ed-option__input-number-wrap')]/input[2]
                    overlay:
                      self: //span[text()='Overlay']
                      type: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.type}
                      gradientType: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.gradientType}
                      angle: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.angle}
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.value}
                settings:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Settings']
                  width:
                    value: //span[text()='Width']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//input[@type='range']
                    unit:
                      self: //span[text()='Width']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//div[@role='combobox']
                      item: //li[contains(@class,'brz-ed-control__multiSelect__option')]
                  height:
                    value: //span[text()='Height']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//input[@type='range']
                    unit:
                      self: //span[text()='Height']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//div[@role='combobox']
                      item: //li[contains(@class,'brz-ed-control__multiSelect__option')]
                counter:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Counter']
                  tabs:
                    self: //ul[contains(@class,'brz-ed-control__tabs__top')]
                    counter:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.self}//span[text()='Counter']
                      style: //div[contains(@class,'brz-ed-option-type__radioGroup-dev')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      start: //span[text()='Start']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]//input[@type='number']
                      end: //span[text()='End']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]//input[@type='number']
                      duration: //span[text()='Duration']/ancestor::div[contains(@class,'brz-ed-option-type__slider-dev')]//input[@type='number']
                    advanced:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.self}//span[text()='Advanced']
                      prefix: //span[text()='Prefix']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]//input[@type='text']
                      suffix: //span[text()='Suffix']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]//input[@type='text']
                      separator: //span[text()='Separator']/ancestor::div[contains(@class,'brz-ed-option-type__population-dev')]//input[@type='text']
                image:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Image']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    image:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.self}//span[text()='Image']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      image: //span[text()='Image']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//div[contains(@class,'brz-ed-control__focal-point__upload')]
                      zoom: //span[text()='Zoom']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//input[@type='range']
                      openInLightBox: //span[text()='Open in Lightbox']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//div[contains(@class,'brz-ed-control__switch')]
                    mask:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.self}//span[text()='Mask']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      shape: //span[text()='Shape']/ancestor::div[contains(@class,'brz-ed-option-type__select-dev')]//div[@role='combobox']
                      size:
                        common: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-control__group')]
                        self: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.mask.size.common}//div[contains(@class,'brz-ed-option-type__select-dev')]//div[@role='combobox']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.mask.size.common}//div[contains(@class,'brz-ed-option-type__slider-dev')]//div[@role='combobox']
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.mask.size.common}//input[@type='range']
                      position: //span[text()='Position']/ancestor::div[contains(@class,'brz-ed-option-type__select-dev')]//div[@role='combobox']
                      repeat: //span[text()='Repeat']/ancestor::div[contains(@class,'brz-ed-option-type__select-dev')]//div[@role='combobox']
                      image: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.image.image}
    bottomPanel:
      self: //div[contains(@class,'brz-ed-fixed-bottom-panel')]
      showHiddenElements: ${pages.editor.bottomPanel.self}//li[@title='Show Hidden Elements']
      undo: ${pages.editor.bottomPanel.self}//li[contains(@title,'Undo')]
      redo: ${pages.editor.bottomPanel.self}//li[contains(@title,'Redo')]
      preview: ${pages.editor.bottomPanel.self}//li[contains(@title,'Preview')]
      saveDraft: ${pages.editor.bottomPanel.self}//li//span[text()='Save Draft']
      update: ${pages.editor.bottomPanel.self}//li//span[text()='Update']
      saveDraftButton: ${pages.editor.bottomPanel.self}//button
      saveMenu:
        self: //div[contains(@class,'brz-ed-tooltip__content-portal')]
        menuItems: ${pages.editor.bottomPanel.saveMenu.self}//div[contains(@class,'brz-ed-tooltip__item')]//span
        clearLayout: ${pages.editor.bottomPanel.saveMenu.self}//span[@title='Clear Layout']
        saveLayout: ${pages.editor.bottomPanel.saveMenu.self}//span[@title='Save Layout']
        publishPage: ${pages.editor.bottomPanel.saveMenu.self}//span[@title='Publish Page']
        switchToDraft: ${pages.editor.bottomPanel.saveMenu.self}//span[@title='Switch to Draft']
    sidebar:
      self: //div[contains(@class,'brz-ed-sidebar')]
      addItems:
        self: ${pages.editor.sidebar.self}//div[@title='Add Elements']
        content:
          self: //div[contains(@class,'brz-ed-sidebar__content')]
          header:
            self: ${pages.editor.sidebar.addItems.content.self}//div[contains(@class,'brz-ed-sidebar__header')]
          main:
            self: ${pages.editor.sidebar.addItems.content.self}//div[contains(@class,'brz-ed-sidebar__main')]
            columns: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='columns']
            row: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='row']
            text: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='text']
            image: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='image']
            button: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='button']
            icon: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='icon']
            spacer: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='spacer']
            map: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='map']
            form: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='form']
            line: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='line']
            menuSimple: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='MenuSimple']
            translation: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='translation']
            video: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='video']
            audio: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='audio']
            iconText: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='iconText']
            embedCode: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='embedCode']
            alert: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='Alert']
            counter: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='counter']
            countdown2: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='countdown2']
            progressBar: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='progressBar']
            tabs: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='tabs']
            accordion: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='accordion']
            postTitle: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='PostTitle']
            posts: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='Posts']
            assetsPosts: ${pages.editor.sidebar.addItems.content.self}//div[@data-sortable-subtype='AssetsPosts']
    editorPopUp:
      self: //div[contains(@class,'brz-ed-popup-two-wrapper brz-ed-popup-two-blocks')]
      header:
        self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-header')]
        search: ${pages.editor.editorPopUp.self}//input[contains(@class,'brz-input brz-ed-popup-two__input')]
        tabs:
          self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-tab-item')]
          tab:
            icon: //div[contains(@class,'brz-ed-popup-two-tab-icon')]
            name: //div[contains(@class,'brz-ed-popup-two-tab-name')]
      body:
        self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-body')]
        sidebar:
          self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-body__sidebar')]
        content:
          self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-body__content')]
          createYourOwn: //p[text()='Create your own']
  publish:
    section:
      self: //div[contains(@class,'brz-root__container')]//section
      container:
        self: //div[contains(@class,'brz-container')]
        item:
          self: ${pages.publish.section.container.self}//div[@data-custom-id or @id]