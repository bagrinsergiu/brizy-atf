pages:
  home:
    getStarted: //span[text()='Get Started Now' and ancestor::a]
  dashboard:
    projects:
      self: //div[@id='projectList']
      items: //li[not(contains(@class,'add-new')) and contains(@class,'active-project')]
      project:
        title: //h2[contains(@class,'project-title')]//input
        openProject: //a[contains(@class,'title-icon')]
        publishProject: //a[text(), 'Publish']
        edit: //div[contains(@class,'overlay-title') and text()='Edit Project']
        menu:
          self: //div[contains(@class,'project-settings']//a[contains(@class,'show-more')]
          delete: //a[contains(@class,'confirmation' and text()='Delete']
  editor:
    alert: //div[@role='alert']//div[not(@class)]
    error: //span[contains(text(), 'An error happened while trying to display this element')]
    frame:
      name: brz-ed-iframe
      cmsFrame: cms
      addButton: //div[contains(@class,'floating-action-button')]
      workspace:
        self: //div[contains(@id,'brz-ed-page__blocks')]
        section:
          self: ${pages.editor.frame.workspace.self}//section
          container:
            self: //div[contains(@class,'brz-ed-wrap-block-item')]
            empty: //div[contains(@class,'brz-ed-sortable--empty')]
            item:
              self: //div[contains(@data-brz-border--grey,'wrapper')]
              borderButton: //div[contains(@class,'brz-ed-border__button')]
              type:
                form:
                  self: //form
                  field:
                    self: //div[contains(@class,'brz-forms2__item') and not(contains(@class,'brz-forms2__item-button'))]/div
                    text: //input[@data-brz-type='Text']
                    email: //input[@data-brz-type='Email']
                    number: //input[@data-brz-type='Number']
                    paragraph: //textarea[@data-brz-type='Paragraph']
                    select: //div[contains(@class,'brz-forms2__field-select')]//select
                    radio:
                      self: //div[contains(@class,'brz-forms2__radio-options')]
                      items: //div[contains(@class,'brz-control__radio-option')]
                    checkBox:
                      self: //div[contains(@class,'brz-forms2__checkbox-options')]
                      items: //div[contains(@class,'brz-control__check-group-option')]
                    date: //input[@data-brz-type='Date']
                    url: //input[@data-brz-type='Url']
                    time: //input[@data-brz-type='Time']
                    file: //input[@data-brz-type='FileUpload']
                    tel: //input[@data-brz-type='Tel']
                    password: //input[@data-brz-type='Password']
              rightClickContext:
                self: //div[@role='menu' and contains(@class,'react-contexify')]
                menuItem:
                  title: //div//span[contains(@class,'title')]
                  keyShortcut: //div//span[contains(@class,'placeholder')]
                copy: //div[contains(@class,'react-contexify__item')]//span[text()='Copy']
                paste: //div[contains(@class,'react-contexify__item')]//span[text()='Paste']
                pasteStyles: //div[contains(@class,'react-contexify__item')]//span[text()='Paste Styles']
                duplicate: //div[contains(@class,'react-contexify__item')]//span[text()='Duplicate']
                delete: //div[contains(@class,'react-contexify__item')]//span[text()='Delete']
              toolbar:
                self: //div[contains(@class,'brz-ed-toolbar__items')]
                popUp: //div[contains(@class,'brz-ed-control__popover--content')]
                item: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title]
                align: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Align']
                list: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='List']
                bold: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Bold']
                italic: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Italic']
                underline: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Underline']
                strike: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Strike']
                uppercase: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Uppercase']
                duplicate: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Duplicate']
                delete: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Delete']
                mover:
                  moveUp: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//span[@title='Move up']
                  moveDown: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//span[@title='Move down']
                field:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Field']
                  tabs:
                    background:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: //span[text()='Background']
                      size: //div[text()='Size']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                    field:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: //span[text()='Field']
                      type: //div[contains(@class,'brz-ed-option-type__select') and .//span[text()='Type']]//div[@role='combobox']
                      required: //span[text()='Required']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      multipleSelection: //span[text()='Multiple Selection']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      nativeHtml5: //span[text()='Native HTML5']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      minNumberErrorMessage: //span[text()='Min number error message']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      maxNumberErrorMessage: //span[text()='Max number error message']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      min: //span[text()='Min']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      max: //span[text()='Max']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      minDate: //span[text()='Min Date']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      maxDate: //span[text()='Max Date']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      minTime: //span[text()='Min Time']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      maxTime: //span[text()='Max Time']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      columns: //div[contains(@class,'brz-ed-option-type__select') and .//span[text()='Columns']]//div[@role='combobox']
                      fileSizeErrorMessage: //span[text()='File size error message']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      fileTypeErrorMessage: //span[text()='File type error message']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      maxFileSize: //div[contains(@class,'brz-ed-option-type__select') and .//span[text()='Max. File Size']]//div[@role='combobox']
                      allowedFileTypes: //span[text()='Allowed File Types']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      checkBox:
                        item:
                          self: //div[contains(@class,'brz-control__check-group-option')]
                          check: //div[contains(@class,'brz-control__check-group-icon')]
                          value: //div[contains(@class,'brz-forms2__checkbox-option-name')]//input[@type='text']
                          delete: //div[contains(@class,'brz-forms2__checkbox-option-icon')]
                        newItem:
                          self: //div[contains(@class,'brz-forms2__checkbox-option-new')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.field.tabs.field.checkBox.newItem.self}//input
                          addButton: ${pages.editor.frame.workspace.section.container.item.toolbar.field.tabs.field.checkBox.newItem.self}//div[contains(@class,'brz-forms2__checkbox-option-icon')]
                      select:
                        item:
                          self: //div[@class='brz-forms2__select-item' and not (.//*[@placeholder='Add new option'])]
                          value: //div[contains(@class,'brz-forms2__select-item__input')]//input
                          delete: //div[contains(@class,'brz-forms2__select-item__icon')]
                        newItem:
                          self: //div[@class='brz-forms2__select-item' and .//*[@placeholder='Add new option']]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.field.tabs.field.select.newItem.self}//input
                          addButton: ${pages.editor.frame.workspace.section.container.item.toolbar.field.tabs.field.select.newItem.self}//div[contains(@class,'brz-forms2__select-item__icon')]
                      radio:
                        item:
                          self: //div[contains(@class,'brz-control__radio-option')]
                          value: //div[contains(@class,'brz-forms2__radio-option-name')]//input[@type='text']
                          delete: //div[contains(@class,'brz-forms2__radio-option-icon')]
                        newItem:
                          self: //div[contains(@class,'brz-forms2__radio-option-new')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.field.tabs.field.radio.newItem.self}//input
                          addButton: ${pages.editor.frame.workspace.section.container.item.toolbar.field.tabs.field.radio.newItem.self}//div[contains(@class,'brz-forms2__radio-option-icon')]
                      spacing:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Spacing']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.field.tabs.field.spacing.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.field.tabs.field.spacing.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                    advanced:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: //span[text()='Advanced']
                      label: //span[text()='Required']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      placeholder: //span[text()='Required']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                typography:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Typography']
                  fonts:
                    self: //div[contains(@class,'brz-ed-font__typography')]//div[contains(@class,'brz-scrollbar__wrapper')]
                    font: //div[contains(@class,'brz-ed-font__name')]
                    activeFont: //div[contains(@class,'brz-ed-font__name') and contains(@class,'active')]
                    newFont: //div[contains(@class,'brz-ed-font__typography-adder')]
                  styles:
                    self: //div[contains(@class,'brz-ed-control__typography-styles')]
                    typography:
                      title: //div[contains(@class,'brz-ed-component__label')]
                      self: //div[@class='brz-ed-control__font-style']
                      settings: //div[contains(@class,'brz-ed-control__font-style--settings')]
                    size:
                      self: //div[contains(@class,'brz-ed-component__label') and text() = 'Size']/ancestor::div[contains(@class, 'brz-ed__col')]
                      unit:
                        self: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.size.self}//div[@role='combobox']
                      value:
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.size.self}//div[contains(@class,'brz-ed-control__stepper--value')]//input
                        increase: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.size.self}//div[contains(@class,'brz-ed-control__stepper--up')]
                        decrease: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.size.self}//div[contains(@class,'brz-ed-control__stepper--down')]
                    weight:
                      self: //div[contains(@class,'brz-ed-component__label') and text() = 'Weight']/ancestor::div[contains(@class, 'brz-ed__col')]
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.weight.self}//div[@role='combobox']
                    lineHgt:
                      self: //div[contains(@class,'brz-ed-component__label') and text() = 'Line Height']/ancestor::div[contains(@class, 'brz-ed__col')]
                      value:
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.lineHgt.self}//div[contains(@class,'brz-ed-control__stepper--value')]//input
                        increase: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.lineHgt.self}//div[contains(@class,'brz-ed-control__stepper--up')]
                        decrease: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.lineHgt.self}//div[contains(@class,'brz-ed-control__stepper--down')]
                    letterSp:
                      self: //div[contains(@class,'brz-ed-component__label') and text() = 'Letter Space']/ancestor::div[contains(@class, 'brz-ed__col')]
                      value:
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.letterSp.self}//div[contains(@class,'brz-ed-control__stepper--value')]//input
                        increase: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.letterSp.self}//div[contains(@class,'brz-ed-control__stepper--up')]
                        decrease: ${pages.editor.frame.workspace.section.container.item.toolbar.typography.styles.letterSp.self}//div[contains(@class,'brz-ed-control__stepper--down')]
                colors:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Colors']
                  normal: //ul[contains(@class,'brz-ed-control__tabs__left')]//li[@title='Normal']
                  hover: //ul[contains(@class,'brz-ed-control__tabs__left')]//li[@title='Hover']
                  color:
                    type: //div[@role='combobox' and ancestor::div[contains(@class,'brz-ed-control__colorPickerSelect--select')]]
                    gradientType: //div[@role='combobox' and ancestor::div[contains(@class,'brz-ed-control__backgroundColor__gradientType--linear')]]
                    angle: //div[contains(@class, 'brz-ed-control__backgroundColor--degree')]//input[@type='number']
                    value: //div[contains(@class, 'brz-ed-control__color-picker-inputs')]//input[@type='text']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    background:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: //span[text()='Background']
                      type: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.type}
                      gradientType: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.gradientType}
                      angle: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.angle}
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.value}
                    border:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: //span[text()='Border']
                      size: //div[contains(@class, 'brz-ed-control__border__width')]//input[@type='number']
                      type: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.type}
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.value}
                      borderWidthControl:
                        self: //button[contains(@class, 'brz-ed-control__border__widthType')]
                        right: //div[contains(@class,'brz-ed-control__border__width')]//input[2]
                        left: //div[contains(@class,'brz-ed-control__border__width')]//input[4]
                        up: //div[contains(@class,'brz-ed-control__border__width')]//input[1]
                        down: //div[contains(@class,'brz-ed-control__border__width')]//input[3]
                    shadow:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: //span[text()='Shadow']
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.value}
                      type: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.type}
                      blurRadius: //div[contains(@class,'brz-ed-option__input-number-wrap')]/input[1]
                      verticalOffset: //div[contains(@class,'brz-ed-option__input-number-wrap')]/input[3]
                      horizontalOffset: //div[contains(@class,'brz-ed-option__input-number-wrap')]/input[4]
                      spreadRadius: //div[contains(@class,'brz-ed-option__input-number-wrap')]/input[2]
                    overlay:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: //span[text()='Overlay']
                      type: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.type}
                      gradientType: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.gradientType}
                      angle: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.angle}
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.colors.color.value}
                settings:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Settings']
                  scrollbar:
                    self: //div[contains(@class,'brz-scrollbar__view')]
                    tabs: //div[contains(@class,'brz-ed-control__tabs')]//li
                    styling:
                      self: //span[text()='Styling' and ancestor::li]
                      tabs: //ul[contains(@class,'brz-ed-control__tabs')]//li
                      basic:
                        self: //div[contains(@class,'brz-ed-control__tabs-wrapper') and //span[text()='Basic']]
                        tab: //span[text()='Basic' and ancestor::li]
                        padding:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.self}//span[text()='Padding']/ancestor::div[contains(@class,'brz-ed-option-type__padding')]
                          items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.self}//div[contains(@class,'brz-ed-control__radio-group2__item')]
                          spacing:
                            all:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.self}//div[contains(@class,'brz-ed__control--number-slider')]
                              unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.all.self}//div[@role='combobox']
                              value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.all.self}//input[@type='range']
                            individual:
                              top:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-top')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.top.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.top.self}//input[@type='range']
                              right:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-right')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.right.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.right.self}//input[@type='range']
                              bottom:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-bottom')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.bottom.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.bottom.self}//input[@type='range']
                              left:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-left')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.left.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.padding.spacing.individual.left.self}//input[@type='range']
                        margin:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.self}//span[text()='Margin']/ancestor::div[contains(@class,'brz-ed-option-type__margin')]
                          items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.self}//div[contains(@class,'brz-ed-control__radio-group2__item')]
                          spacing:
                            all:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.self}//div[contains(@class,'brz-ed__control--number-slider')]
                              unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.all.self}//div[@role='combobox']
                              value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.all.self}//input[@type='range']
                            individual:
                              top:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-top')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.top.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.top.self}//input[@type='range']
                              right:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-right')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.right.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.right.self}//input[@type='range']
                              bottom:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-bottom')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.bottom.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.bottom.self}//input[@type='range']
                              left:
                                self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.self}//*[name()='use' and contains(@*[name()='xlink:href'], 'icons.svg#nc-styling-left')]/ancestor::div[2]
                                unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.left.self}//div[@role='combobox']
                                value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.margin.spacing.individual.left.self}//input[@type='range']
                        positionGroup:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.self}//span[text()='Position']/ancestor::div[contains(@class,'brz-ed-option-type__group')]
                          position:
                            self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.self}//div[contains(@class,'brz-ed-option-type__select') and .//span[text()='Position']]//div[@role='combobox']
                            item: //li[contains(@class,'brz-ed-control__multiSelect__option')]
                            width:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.self}//span[text()='Width']/ancestor::div[contains(@class,'brz-ed-option-type__slider')]
                              unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.width.self}//div[@role='combobox']
                              value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.width.self}//input[@type='range']
                            horizontalOffset:
                              self: //span[text()='Horizontal Offset']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]
                              items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.horizontalOffset.self}//div[contains(@class,'brz-ed-control__radio-group2__item')]
                            horizontalOffsetValue:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.horizontalOffset.self}/following-sibling::div[1]
                              unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.horizontalOffsetValue.self}//div[@role='combobox']
                              value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.horizontalOffsetValue.self}//input[@type='range']
                            verticalOffset:
                              self: //span[text()='Vertical Offset']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]
                              items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.verticalOffset.self}//div[contains(@class,'brz-ed-control__radio-group2__item')]
                            verticalOffsetValue:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.verticalOffset.self}/following-sibling::div
                              unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.verticalOffsetValue.self}//div[@role='combobox']
                              value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.basic.positionGroup.position.verticalOffsetValue.self}//input[@type='range']
                      advanced:
                        self: //span[text()='Advanced' and ancestor::li]
                        showOnDesktop: //span[text()='Show on Desktop']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//div[contains(@class,'brz-ed-control__switch')]
                        zIndex: //span[text()='Z‑index']/ancestor::div[contains(@class,'brz-ed-option-type__slider')]//input[@type='range']
                        cssId:
                          self: //span[text()='CSS ID']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.cssId.self}//input
                          population:
                            self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.cssId.self}//div[contains(@class,'brz-control__select-current__icon')]
                            items: //div[contains(@class,'brz-control__select-option') and @title]
                        cssClass:
                          self: //span[text()='CSS Class']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.cssClass.self}//input
                          population:
                            self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.cssClass.self}//div[contains(@class,'brz-control__select-current__icon')]
                            items: //div[contains(@class,'brz-control__select-option') and @title]
                        customAttribute:
                          self: //span[text()='Custom Attributes']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.customAttribute.self}//input
                          population:
                            self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.customAttribute.self}//div[contains(@class,'brz-control__select-current__icon')]
                            items: //div[contains(@class,'brz-control__select-option') and @title]
                        customCss:
                          self: //span[text()='Custom CSS']/ancestor::div
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.styling.advanced.customCss.self}//input
                        hoverTransition: //span[text()='Hover Transition']/ancestor::div[contains(@class,'brz-ed-option-type__slider')]//input[@type='range']
                    effects:
                      self: //span[text()='Effects' and ancestor::li]
                      tabContent: //div[contains(@class,'brz-ed-control__tab__content')]
                      tabs: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//ul[contains(@class,'brz-ed-control__tabs')]//li
                      propertiesContent: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//div[contains(@class,'brz-ed-control__group')]
                      gridContent: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//div[contains(@class,'grid')]
                      entrance:
                        self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//span[text()='Entrance' and ancestor::li]
                        grid:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.gridContent}
                          items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.entrance.grid.self}//div
                          item: //div[contains(text(),'%s')]/ancestor::div[contains(@class,'brz-ed--fat-icon ')]
                          activeItem: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.scroll.grid.items}//div[contains(@class,'text-right-sidebar-item--active')]
                        properties:
                          direction: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Direction']]//div[@role='combobox']
                          big: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Big']]//div[contains(@class,'brz-ed-control__switch')]
                          duration: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Duration']]//input[@type='range']
                          delay: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Delay']]//input[@type='range']
                          infiniteAnimation: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Infinite Animation']]//div[contains(@class,'brz-ed-control__switch')]
                      hover:
                        self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//span[text()='Hover' and ancestor::li]
                        grid:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.gridContent}
                          items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.hover.grid.self}//div
                          item: //div[contains(text(),'%s')]/ancestor::div[contains(@class,'brz-ed--fat-icon ')]
                          activeItem: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.scroll.grid.items}//div[contains(@class,'text-right-sidebar-item--active')]
                        properties:
                          style: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//span[text()='Style']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//div[@role='combobox']
                          direction: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.entrance.properties.direction}
                          duration: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.entrance.properties.duration}
                          infiniteAnimation: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.entrance.properties.infiniteAnimation}
                      scroll:
                        self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//span[text()='Scroll' and ancestor::li]
                        grid:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.gridContent}
                          items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.scroll.grid.self}//div
                          item: //div[contains(text(),'%s')]/ancestor::div[contains(@class,'brz-ed--fat-icon ')]
                          activeItem: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.scroll.grid.items}//div[contains(@class,'text-right-sidebar-item--active')]
                        properties:
                          direction: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.entrance.properties.direction}
                          x: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='X']]//div[@role='combobox']
                          y: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Y']]//div[@role='combobox']
                          speed: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Speed']]//input[@type='range']
                          level: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed-option-wrapper') and .//span[text()='Level']]//input[@type='range']
                          start: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed__control--range-slider__sliders')]//input[not(contains(@class,'brz-ed__control--range-slider__to'))]
                          stop: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.propertiesContent}//div[contains(@class,'brz-ed__control--range-slider__sliders')]//input[contains(@class,'brz-ed__control--range-slider__to')]
                    align: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//div[contains(text(). 'Align' and ancestor::div[contains(@class,'brz-ed-control__right-sidebar-tabs__icon')]]
                    unlock: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.scrollbar.effects.tabContent}//div[contains(text(). 'lock' and ancestor::div[contains(@class,'brz-ed-control__right-sidebar-tabs__icon')]]
                  tabs:
                    self: //ul[contains(@class,'brz-ed-control__tabs__top')]
                    configurations: //div[contains(@class,'brz-ed-option__label')]
                    width:
                      self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Width']]
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.width.self}//input[@type='range']
                      unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.width.self}//div[@role='combobox']
                    sidebar:
                      self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Sidebar']]
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.sidebar.self}//input[@type='range']
                      unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.sidebar.self}//div[@role='combobox']
                    height:
                      self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Height']]
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.height.self}//input[@type='range']
                      unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.height.self}//div[@role='combobox']
                    content: //span[text()='Content']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                    size:
                      self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Size']]
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.size.self}//input[@type='range']
                      unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.size.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                    gapAbove:
                      self: //span[text()='Gap Above']/ancestor::div[contains(@class,'brz-ed-option-type__slider')]
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.gapAbove.self}//input[@type='number']
                      unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.gapAbove.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                    gapBelow:
                      self: //span[text()='Gap Below']/ancestor::div[contains(@class,'brz-ed-option-type__slider')]
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.gapBelow.self}//input[@type='number']
                      unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.gapBelow.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                    htmlTag: //span[text()='HTML Tag']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                    gap:
                      self: //span[text()='Gap']/ancestor::div[contains(@class,'brz-ed-option-type__slider')]
                      value: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.gap.self}//input[@type='number']
                      unit: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.tabs.gap.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                  grid:
                    self: ${pages.editor.frame.workspace.section.container.item.toolbar.popUp}//div[contains(@class,'brz-ed-option-type__grid')]
                    items: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.grid.self}//div[contains(@class,'brz-ed-option-type__sidebarTabsButton')]
                    styling: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.grid.self}//span[text()='Styling']
                    effects: ${pages.editor.frame.workspace.section.container.item.toolbar.settings.grid.self}//span[text()='Effects']
                counter:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Counter']
                  tabs:
                    self: //ul[contains(@class,'brz-ed-control__tabs__top')]
                    counter:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.self}//span[text()='Counter']
                      style: //div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      start:
                        self: //span[text()='Start']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.counter.start.self}//input[@type='number']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.counter.start.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      end:
                        self: //span[text()='End']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.counter.end.self}//input[@type='number']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.counter.end.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      duration: //span[text()='Duration']/ancestor::div[contains(@class,'brz-ed-option-type__slider')]//input[@type='number']
                    advanced:
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.self}//span[text()='Advanced']
                      prefix:
                        self: //span[text()='Prefix']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.advanced.prefix.self}//input[@type='text']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.advanced.prefix.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      suffix:
                        self: //span[text()='Suffix']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.advanced.suffix.self}//input[@type='text']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.advanced.suffix.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      separator:
                        self: //span[text()='Separator']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.advanced.separator.self}//input[@type='text']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.counter.tabs.advanced.separator.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                button:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Button']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    button:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.self}//span[text()='Button']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      size:
                        self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-option-type__group')]
                        items: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.size.self}//div[contains(@class,'brz-ed-control__radio-group2__item')]
                        custom:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.size.self}
                          width:
                            self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Width']]
                            value: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.size.custom.width.self}//input[@type='range']
                            unit: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.size.custom.width.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                          height:
                            self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Height']]
                            value: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.size.custom.height.self}//input[@type='range']
                            unit: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.size.custom.height.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                      fill: //span[text()='Fill']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      corner:
                        self: //span[text()='Corner']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2')]//div
                        custom:
                          self: //span[text()='Corner']/ancestor::div[contains(@class,'brz-ed-option-type__group')]
                          radiusValue: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.button.corner.custom.self}//input[@type='range']
                    icon:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.self}//span[text()='Icon']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      icon:
                        self: //span[text()='Icon']/ancestor::div[contains(@class,'brz-ed-option-type__iconSetter')]
                        picker:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.icon.self}//div[contains(@class,'brz-ed-control__icon-setter__box')]
                          popUp:
                            self: //div[contains(@class,'brz-ed-popup-icons')]
                            tabs: //div[contains(@class,'brz-ed-popup-header__tabs')]//div
                            closeButton: //div[contains(@class,'brz-ed-popup-btn-close')]
                            categories:
                              self: //div[contains(@class,'brz-ed-popup__select--block-categories')]
                              items: //div[contains(@class,'brz-control__select-option')]
                            search: //input[@placeholder='Enter Search Keyword']
                            grid:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.icon.picker.popUp.self}//div[contains(@class,'brz-ed-popup-icons__grid')]
                              items: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.icon.picker.popUp.grid.self}//div[contains(@class, 'brz-ed-popup-icons__grid__item')]
                              item: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.icon.picker.popUp.grid.items}//i[contains(@class,'%s')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.icon.self}//div[contains(@class,'brz-ed-control__focal-point__delete')]
                      position: //span[text()='Position']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      size:
                        self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-option-type__group')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                        custom:
                          self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-option-type__group')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.size.custom.self}//input[@type='range']
                      spacing:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Spacing']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.spacing.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.spacing.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                icon:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Icon']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    background:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.self}//span[text()='Background']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      size:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Size']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.background.size.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.background.size.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                      fill: //span[text()='Fill']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      corner:
                        self: //span[text()='Corner']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2')]//div
                        custom:
                          self: //span[text()='Corner']/ancestor::div[contains(@class,'brz-ed-option-type__group')]
                          radiusValue: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.background.corner.custom.self}//input[@type='range']
                    icon:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.self}//span[text()='Icon']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      icon:
                        self: //span[text()='Icon']/ancestor::div[contains(@class,'brz-ed-option-type__iconSetter')]
                        picker:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.icon.icon.self}//div[contains(@class,'brz-ed-control__icon-setter__box')]
                          popUp:
                            self: //div[contains(@class,'brz-ed-popup-icons')]
                            tabs: //div[contains(@class,'brz-ed-popup-header__tabs')]//div
                            closeButton: //div[contains(@class,'brz-ed-popup-btn-close')]
                            categories:
                              self: //div[contains(@class,'brz-ed-popup__select--block-categories')]
                              items: //div[contains(@class,'brz-control__select-option')]
                            search: //input[@placeholder='Enter Search Keyword']
                            grid:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.icon.icon.picker.popUp.self}//div[contains(@class,'brz-ed-popup-icons__grid')]
                              items: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.icon.icon.picker.popUp.grid.self}//div[contains(@class, 'brz-ed-popup-icons__grid__item')]
                              item: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.icon.icon.picker.popUp.grid.items}//i[contains(@class,'%s')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.icon.icon.self}//div[contains(@class,'brz-ed-control__focal-point__delete')]
                      size:
                        self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-control__group')]//div[contains(@class,'brz-ed-control__radio-group2')]//div
                        custom:
                          self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-control__group')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.icon.size.custom.self}//input[@type='range']
                image:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Image']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    image:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.self}//span[text()='Image']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      image:
                        self: //span[text()='Image']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.image.image.self}//div[contains(@class,'brz-ed-control__focal-point__upload')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.image.image.self}//div[contains(@class,'brz-ed-control__focal-point__delete')]
                      zoom: //span[text()='Zoom']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//input[@type='range']
                      openInLightBox: //span[text()='Open in Lightbox']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]//div[contains(@class,'brz-ed-control__switch')]
                    mask:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.self}//span[text()='Mask']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      shape: //span[text()='Shape']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      size:
                        common: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-control__group')]
                        self: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.mask.size.common}//div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.mask.size.common}//div[contains(@class,'brz-ed-option-type__slider')]//div[@role='combobox']
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.mask.size.common}//input[@type='range']
                      position: //span[text()='Position']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      repeat: //span[text()='Repeat']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      image:
                        self: //span[text()='Image']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.image.image.self}//div[contains(@class,'brz-ed-control__focal-point__upload')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.image.tabs.image.image.self}//div[contains(@class,'brz-ed-control__focal-point__delete')]
                line:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Style']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    line:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.line.self}
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      style: //span[text()='Style']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      type: //span[text()='Type']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      height:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Height']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.line.height.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.line.height.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                    icon:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.self}//span[text()='Icon']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      icon:
                        self: //span[text()='Icon']/ancestor::div[contains(@class,'brz-ed-option-type__iconSetter')]
                        picker:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.icon.icon.self}//div[contains(@class,'brz-ed-control__icon-setter__box')]
                          popUp:
                            self: //div[contains(@class,'brz-ed-popup-icons')]
                            tabs: //div[contains(@class,'brz-ed-popup-header__tabs')]//div
                            closeButton: //div[contains(@class,'brz-ed-popup-btn-close')]
                            categories:
                              self: //div[contains(@class,'brz-ed-popup__select--block-categories')]
                              items: //div[contains(@class,'brz-control__select-option')]
                            search: //input[@placeholder='Enter Search Keyword']
                            grid:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.icon.icon.picker.popUp.self}//div[contains(@class,'brz-ed-popup-icons__grid')]
                              items: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.icon.icon.picker.popUp.grid.self}//div[contains(@class, 'brz-ed-popup-icons__grid__item')]
                              item: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.icon.icon.picker.popUp.grid.items}//i[contains(@class,'%s')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.button.tabs.icon.icon.self}//div[contains(@class,'brz-ed-control__focal-point__delete')]
                      align: //span[text()='Align']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      size:
                        self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-control__group')]//div[contains(@class,'brz-ed-control__radio-group2')]//div
                        custom:
                          self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-control__group')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.icon.size.custom.self}//input[@type='range']
                      spacing:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Spacing']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.icon.spacing.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.icon.spacing.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                      padding:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Padding']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.icon.padding.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.icon.padding.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                      rotate:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Rotate']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.icon.rotate.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.icon.rotate.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                    text:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.self}//span[text()='Text']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      align: //span[text()='Align']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      spacing:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Spacing']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.text.spacing.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.line.tabs.text.spacing.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                video:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Video']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    video:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.video.tabs.self}//span[text()='Video']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      type: //span[text()='Type']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      ratio: //span[text()='Ratio']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      file:
                        self: //span[text()='File']/ancestor::div[contains(@class,'brz-ed-option-type__fileUpload')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.video.tabs.video.file.self}//div[contains(@class,'brz-ed-control__focal-point__upload')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.video.tabs.video.file.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--remove')]
                        fileName: ${pages.editor.frame.workspace.section.container.item.toolbar.video.tabs.video.file.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--title')]
                      url: //span[text()='Link']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      link:
                        self: //span[text()='Link']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.video.tabs.video.link.self}//input
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.video.tabs.video.link.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                    advanced:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='Advanced']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      controls: //span[text()='Controls']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      branding: //span[text()='Branding']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      intro: //span[text()='Intro']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      loop: //span[text()='Loop']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      start: //span[text()='Start']/ancestor::div[contains(@class,'brz-ed-option-type__number')]//input[@type='number']
                      end: //span[text()='End']/ancestor::div[contains(@class,'brz-ed-option-type__number')]//input[@type='number']
                    playback:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='Playback']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      autoplay: //span[text()='Autoplay']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      muted: //span[text()='Muted']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      loop: //span[text()='Loop']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      suggestedVideos: //span[text()='Suggested Videos']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      start: //span[text()='Start']/ancestor::div[contains(@class,'brz-ed-option-type__number')]//input[@type='number']
                      end: //span[text()='End']/ancestor::div[contains(@class,'brz-ed-option-type__number')]//input[@type='number']
                    cover:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='Cover']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      coverImage:
                        self: //span[text()='Cover']/ancestor::div[contains(@class,'brz-ed-option-type__imageUpload')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.video.tabs.cover.coverImage.self}//div[contains(@class,'brz-ed-control__focal-point__upload')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.video.tabs.cover.coverImage.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--remove')]
                        fileName: ${pages.editor.frame.workspace.section.container.item.toolbar.video.tabs.cover.coverImage.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--title')]
                    player:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='Player']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      coverImage:
                        self: //span[text()='Cover Image']/ancestor::div[contains(@class,'brz-ed-option-type__imageUpload')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.video.tabs.player.coverImage.self}//div[contains(@class,'brz-ed-control__focal-point__upload')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.video.tabs.player.coverImage.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--remove')]
                        fileName: ${pages.editor.frame.workspace.section.container.item.toolbar.video.tabs.player.coverImage.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--title')]
                      controls: //span[text()='Controls']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      branding: //span[text()='Branding']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      lazyLoad: //span[text()='Lazy Load']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      privacyMode: //span[text()='Privacy Mode']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                playlist:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Playlist']
                  tabs:
                    self: //div[contains(@class,'brz-ed-toolbar')]
                    playlist:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.playlist.tabs.self}//div[@title='Playlist']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      position: //span[text()='Position']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      thumbs: //span[text()='Thumbs']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      columns:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Columns']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.playlist.tabs.playlist.columns.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.playlist.tabs.playlist.columns.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                gallery:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Gallery']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    gallery:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.gallery.tabs.self}//span[text()='Gallery']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      images:
                        self: //span[text()='Images']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.gallery.tabs.gallery.images.self}//div[contains(@class,'brz-ed-control__gallery')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.gallery.tabs.gallery.images.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--remove')]
                        fileName: ${pages.editor.frame.workspace.section.container.item.toolbar.gallery.tabs.gallery.images.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--title')]
                      layout: //span[text()='Layout']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      height:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Height']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.gallery.tabs.gallery.height.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.gallery.tabs.gallery.height.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                      aspectRatio: //span[text()='Aspect Ratio']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      enableTags: //span[text()='Enable Tags']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      openInLightBox: //span[text()='Open in Lightbox']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                    items:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.gallery.tabs.self}//span[text()='Items']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      columns:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Columns']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.gallery.tabs.items.columns.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.gallery.tabs.items.columns.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                      spacing:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Spacing']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.gallery.tabs.items.spacing.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.gallery.tabs.items.spacing.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                carousel:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Carousel']
                  tabs:
                    self: //div[contains(@class,'brz-ed-toolbar')]
                    carousel:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.carousel.tabs.self}//div[@title='Carousel']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      autoplay: //span[text()='Autoplay']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      speed:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Speed']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.carousel.tabs.carousel.speed.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.carousel.tabs.carousel.speed.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                      stopTime:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Stop Time']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.carousel.tabs.carousel.stopTime.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.carousel.tabs.carousel.stopTime.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                      columns:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Columns']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.carousel.tabs.carousel.columns.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.carousel.tabs.carousel.columns.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                      spacing:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Spacing']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.carousel.tabs.carousel.spacing.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.carousel.tabs.carousel.spacing.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                    navigation:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.carousel.tabs.self}//div[@title='Navigation']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      spacing:
                        self: //div[contains(@class,'brz-ed-option-type__slider') and .//span[text()='Spacing']]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.carousel.tabs.navigation.spacing.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.carousel.tabs.navigation.spacing.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                      arrows: //span[text()='Arrows']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      dots: //span[text()='Dots']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                lottie:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Lottie']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    lottie:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.lottie.self}
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      lottieLink: //span[text()='Lottie Link']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                      lottieFile:
                        self: //span[text()='Lottie File']/ancestor::div[contains(@class,'brz-ed-option-type__fileUpload')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.lottie.tabs.lottie.lottieFile.self}//div[contains(@class,'brz-ed-control__file-upload__wrapper')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.lottie.tabs.lottie.lottieFile.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--remove')]
                        fileName: ${pages.editor.frame.workspace.section.container.item.toolbar.lottie.tabs.lottie.lottieFile.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--title')]
                      renderer: //span[text()='Renderer']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      autoplay: //span[text()='Autoplay']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      reverse: //span[text()='Reverse']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      loop: //span[text()='Loop']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      speed:
                        self: //span[text()='Speed']/ancestor::div[contains(@class,'brz-ed-option-type__slider')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.lottie.tabs.lottie.speed.self}//input[@type='number']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.lottie.tabs.lottie.speed.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                rating:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Rating']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    rating:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.self}//span[text()='Rating']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      ratingScale: //span[text()='Rating scale']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      style: //span[text()='Style']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      label: //span[text()='Label']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      spacing:
                        self: //span[text()='Spacing']/ancestor::div[contains(@class,'brz-ed-option-type__slider')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.rating.spacing.self}//input[@type='number']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.rating.spacing.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                      rating:
                        self: //span[text()='Rating']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.rating.rating.self}//input[@type='number']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.rating.rating.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                    icons:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.self}//span[contains(text(),'Icon')]
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      icon:
                        self: //span[text()='Icon']/ancestor::div[contains(@class,'brz-ed-option-type__iconSetter')]
                        picker:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.icons.icon.self}//div[contains(@class,'brz-ed-control__icon-setter__box')]
                          popUp:
                            self: //div[contains(@class,'brz-ed-popup-icons')]
                            tabs: //div[contains(@class,'brz-ed-popup-header__tabs')]//div
                            closeButton: //div[contains(@class,'brz-ed-popup-btn-close')]
                            categories:
                              self: //div[contains(@class,'brz-ed-popup__select--block-categories')]
                              items: //div[contains(@class,'brz-control__select-option')]
                            search: //input[@placeholder='Enter Search Keyword']
                            grid:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.icons.icon.picker.popUp.self}//div[contains(@class,'brz-ed-popup-icons__grid')]
                              items: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.icons.icon.picker.popUp.self}//div[contains(@class, 'brz-ed-popup-icons__grid__item')]
                              item: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.icons.icon.picker.popUp.grid.items}//i[contains(@class,'%s')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.icons.icon.self}//div[contains(@class,'brz-ed-control__focal-point__delete')]
                      size:
                        self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-control__group')]//div[contains(@class,'brz-ed-control__radio-group2')]//div
                        custom:
                          self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-control__group')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.icon.size.custom.self}//input[@type='range']
                      spacing:
                        self: //span[text()='Spacing']/ancestor::div[contains(@class,'brz-ed-option-type__slider')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.icons.spacing.self}//input[@type='number']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.icons.spacing.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                    icon:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.self}//span[text()='Icon']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      icon:
                        self: //span[text()='Icon']/ancestor::div[contains(@class,'brz-ed-option-type__iconSetter')]
                        picker:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.icon.icon.self}//div[contains(@class,'brz-ed-control__icon-setter__box')]
                          popUp:
                            self: //div[contains(@class,'brz-ed-popup-icons')]
                            tabs: //div[contains(@class,'brz-ed-popup-header__tabs')]//div
                            closeButton: //div[contains(@class,'brz-ed-popup-btn-close')]
                            categories:
                              self: //div[contains(@class,'brz-ed-popup__select--block-categories')]
                              items: //div[contains(@class,'brz-control__select-option')]
                            search: //input[@placeholder='Enter Search Keyword']
                            grid:
                              self: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.icon.icon.picker.popUp.self}//div[contains(@class,'brz-ed-popup-icons__grid')]
                              items: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.icon.icon.picker.popUp.self}//div[contains(@class, 'brz-ed-popup-icons__grid__item')]
                              item: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.icon.icon.picker.popUp.grid.items}//i[contains(@class,'%s')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.rating.tabs.icon.icon.self}//div[contains(@class,'brz-ed-control__focal-point__delete')]
                      size:
                        self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-control__group')]//div[contains(@class,'brz-ed-control__radio-group2')]//div
                        custom:
                          self: //span[text()='Size']/ancestor::div[contains(@class,'brz-ed-control__group')]
                          value: ${pages.editor.frame.workspace.section.container.item.toolbar.icon.tabs.icon.size.custom.self}//input[@type='range']
                alert:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Alert']
                  tabs:
                    self: //div[contains(@class,'brz-ed-toolbar')]
                    alert:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.alert.tabs.self}//div[@title='Alert']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      displayCloseButton: //span[text()='Display Close Button']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      displayDescription: //span[text()='Display Description']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      delay:
                        self: //span[text()='Delay']/ancestor::div[contains(@class,'brz-ed-option-type__slider')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.alert.tabs.alert.delay.self}//input[@type='range']
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.alert.tabs.alert.delay.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                audio:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Audio']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    audio:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.self}//span[text()='Audio']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      file:
                        self: //span[text()='File']/ancestor::div[contains(@class,'brz-ed-option-type__fileUpload')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.audio.file.self}//div[contains(@class,'brz-ed-control__focal-point__upload')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.audio.file.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--remove')]
                        fileName: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.audio.file.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--title')]
                      audio: //span[text()='Audio']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      icons: //div[text()='Icons']/ancestor::div[contains(@class,'brz-ed-option__radio-group')]//div[contains(@class,'brz-control__radio-option')]//div
                      loop: //span[text()='Autoplay']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      link:
                        self: //span[text()='Link']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.audio.link.self}//input
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.audio.link.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      style: //div[text()='Style']/ancestor::div[contains(@class,'brz-ed-option__radio-group')]//div[contains(@class,'brz-control__radio-option')]
                      autoplay: //span[text()='Autoplay']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                    appearance:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.self}//span[text()='Appearance']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      artwork: //span[text()='Artwork']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      comments: //span[text()='Comments']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      playCounts: //span[text()='Play Counts']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      username: //span[text()='Username']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                    cover:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.self}//span[text()='Cover']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      cover:
                        self: //span[text()='Cover']/ancestor::div[contains(@class,'brz-ed-option-type__imageUpload')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.cover.cover.self}//div[contains(@class,'brz-ed-control__focal-point__upload')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.cover.cover.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--remove')]
                        fileName: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.cover.cover.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--title')]
                      zoom:
                        self: //span[text()='Zoom']/ancestor::div[contains(@class,'brz-ed-option-type__slider')]
                        unit: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.cover.zoom.self}//div[contains(@class,'brz-ed-control__number-unit__unit')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.cover.zoom.self}//input[@type='number']
                    advanced:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.self}//span[text()='Advanced']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      time: //span[text()='Time']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      duration: //span[text()='Duration']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      progress: //span[text()='Progress']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      volume: //span[text()='Volume']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                    buttons:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.audio.tabs.self}//span[text()='Buttons']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      like: //span[text()='Like']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      buy: //span[text()='Buy']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      download: //span[text()='Download']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      share: //span[text()='Share']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                progress:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Progress']
                  tabs:
                    self: //div[contains(@class,'brz-ed-toolbar')]
                    progress:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.alert.tabs.self}//div[@title='Progress']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      style: //span[text()='Style']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      fill:
                        self: //span[text()='Fill']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.progress.tabs.progress.fill.self}//input[@type='number']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.progress.tabs.progress.fill.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      title: //span[text()='Title']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      percentage: //span[text()='Percentage']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                calendly:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Calendly']
                  tabs:
                    self: //div[contains(@class,'brz-ed-toolbar')]
                    calendly:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.alert.tabs.self}//div[@title='Calendly']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      link: //span[text()='Link']/ancestor::div[contains(@class,'brz-ed-option-type__inputText')]//input
                countdown:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Countdown']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    timer:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='Timer']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      style: //span[text()='Styles']/ancestor::div[contains(@class,'brz-ed-option-type__radioGroup')]//div[contains(@class,'brz-ed-control__radio-group2__item')]
                      date:
                        self: //span[text()='Date']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.countdown.tabs.timer.date.self}//input
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.countdown.tabs.timer.date.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      hour:
                        self: //span[text()='Hour']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.countdown.tabs.timer.hour.self}//div[@role='combobox']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.countdown.tabs.timer.hour.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      minutes:
                        self: //span[text()='Minutes']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.countdown.tabs.timer.minutes.self}//div[@role='combobox']
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.countdown.tabs.timer.minutes.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      timeZone: //span[text()='Time Zone']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                    advanced:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='Advanced']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      days: //span[text()='Days']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]/div[contains(@class,'brz-ed-control__switch')]
                      hours: //span[text()='Hours']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]/div[contains(@class,'brz-ed-control__switch')]
                      minutes: //span[text()='Minutes']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]/div[contains(@class,'brz-ed-control__switch')]
                      seconds: //span[text()='Seconds']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]/div[contains(@class,'brz-ed-control__switch')]
                link:
                  self: ${pages.editor.frame.workspace.section.container.item.toolbar.self}//div[@title='Link']
                  tabs:
                    self: //li[contains(@class,'brz-ed-control__tab') and ancestor::ul[contains(@class,'top')]]
                    url:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='URL']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      linkTo:
                        self: //span[text()='Link to']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.url.linkTo.self}//input
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.url.linkTo.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                      openInNewTab: //span[text()='Open In New Tab']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                      makeItNoFollow: //span[text()='Make it Nofollow']/ancestor::div[contains(@class,'brz-ed-option-type__switch')]//div[contains(@class,' brz-ed-control__switch')]
                    block:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='Block']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      block:
                        self: //div[text()='Block']/ancestor::div[contains(@class,'brz-ed-option')]
                        items: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.block.block.self}//div[contains(@class,'brz-ed-option__block-thumbnail-item')]
                    popup:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='Popup']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      popup:
                        self: //span[text()='Popup']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.popup.popup.self}//div[contains(@class,'brz-ed-control__focal-point__upload')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.popup.popup.self}//div[contains(@class,'brz-ed-control__focal-point__delete')]
                    file:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='File']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      file:
                        self: //span[text()='File']/ancestor::div[contains(@class,'brz-ed-option-wrapper')]
                        uploader: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.file.file.self}//div[contains(@class,'brz-ed-control__file-upload__wrapper')]
                        delete: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.file.file.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--remove')]
                        fileName: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.file.file.self}//span[contains(@class,'brz-ed-control__file-upload__file-name--title')]
                    action:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='Action']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      whenFinished: //span[text()='When Finished']/ancestor::div[contains(@class,'brz-ed-option-type__select')]//div[@role='combobox']
                      message:
                        self: //span[text()='Message']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.action.message.self}//input
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.action.message.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
                    redirect:
                      self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.self}//span[text()='Redirect']
                      configurations: //div[contains(@class,'brz-ed-option__label')]
                      url:
                        self: //span[text()='URL']/ancestor::div[contains(@class,'brz-ed-option-type__population')]
                        value: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.redirect.url.self}//input
                        population:
                          self: ${pages.editor.frame.workspace.section.container.item.toolbar.link.tabs.redirect.url.self}//div[contains(@class,'brz-control__select-current__icon')]
                          items: //div[contains(@class,'brz-control__select-option') and @title]
              content:
                playlist:
                  sidebar:
                    self: //div[contains(@class,'brz-video-playlist-sidebar')]
                    items: ${pages.editor.frame.workspace.section.container.item.content.playlist.sidebar.self}//div[contains(@class,'brz-video-playlist-video-item')]
                    item:
                      title: //div[contains(@class,'brz-video-playlist-title-video')]//span[1]
                      subtitle: //div[contains(@class,'brz-video-playlist-title-video')]//span[2]
                alert:
                  self: //div[contains(@class,'brz-ed-box__resizer')]
                  title: ${pages.editor.frame.workspace.section.container.item.content.alert.self}//span[contains(@class,'alert-title')]
                  description: ${pages.editor.frame.workspace.section.container.item.content.alert.self}//span[contains(@class,'alert-description')]
                  close: ${pages.editor.frame.workspace.section.container.item.content.alert.self}//span[contains(@class,'alert-close')]
                progress:
                  self: //div[contains(@class,'brz-ed-box__resizer')]
                  title: ${pages.editor.frame.workspace.section.container.item.content.progress.self}//span[contains(@class,'brz-progress-bar__text')]
      cmsPopup:
        content: //section[contains(@class,'brz-ui-layout-has-sider')]
        menu: ${pages.editor.frame.cmsPopup.content}//div[contains(text(), 'MENUS')]
        assetsMenu:
          self: ${pages.editor.frame.cmsPopup.content}
          opener: ${pages.editor.frame.cmsPopup.content}//div[contains(text(), 'ASSETS')]
          posts: ${pages.editor.frame.cmsPopup.assetsMenu.self}//a[contains(text(), 'Posts')]
          pagesSection:
            self: ${pages.editor.frame.cmsPopup.assetsMenu.self}
            opener: ${pages.editor.frame.cmsPopup.assetsMenu.self}//a[contains(text(), 'Pages')]
            header:
              self: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.self}//header
              search: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.header.self}//input[contains(@placeholder, 'Search pages')]
              help: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.header.self}//div[contains(@class, 'brz-ui-header__helper')]//span
              close: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.header.self}//div[contains(@class, 'brz-ui-header__close')]//span
            main:
              self: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.self}//main
              table:
                self: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.main.self}//table
                columns:
                  self: //th
                rows:
                  self: //tr
                cell:
                  self: //td
                  actions:
                    self: //div[contains(@class, 'brz-ui-dsk-alY-tp')]
                    edit: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.main.table.cell.actions.self}//button[1]
                    duplicate: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.main.table.cell.actions.self}//button[2]
                    delete: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.main.table.cell.actions.self}//button[3]
            content:
              header:
                self: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.self}//header
                title: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.content.header.self}//div[contains(@class, 'brz-ui-header__content')]//div
                back: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.content.header.self}//div[contains(@class, 'brz-ui-header__back')]//span
                close: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.content.header.self}//div[contains(@class, 'brz-ui-header__close')]//span
              main:
                self: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.self}//main
                title: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.content.main.self}//input[@placeholder='Page title']
                slug: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.content.main.self}//input[@placeholder='Page slug']
                description: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.content.main.self}//*[contains(@data-placeholder,'Enter here the content for this field')]
                published:
              footer:
                self: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.self}//footer
                cancel: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.content.footer.self}//button[.//span[contains(text(), 'Cancel')]]
                saveChanges: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.content.footer.self}//button[.//span[contains(text(), 'Save Changes')]]
            footer:
              self: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.self}//footer
              addNew: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.footer.self}//button[.//span[contains(text(), 'Add New Page')]]
              itemsCount: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.footer.self}//strong
          postsSection:
            self: ${pages.editor.frame.cmsPopup.assetsMenu.self}
            header:
              self: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.self}//header
              search: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.header.self}//input[contains(@placeholder, 'Search pages')]
              help: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.header.self}//div[contains(@class, 'brz-ui-header__helper')]//span
              close: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.header.self}//div[contains(@class, 'brz-ui-header__close')]//span
            main:
              self: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.self}//main
            footer:
              self: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.self}//footer
              addNew: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.footer.self}//button[.//span[contains(text(), 'Add New Post')]]
              itemsCount: ${pages.editor.frame.cmsPopup.assetsMenu.pagesSection.footer.self}//strong
    bottomPanel:
      self: //div[contains(@class,'brz-ed-fixed-bottom-panel')]
      showHiddenElements: ${pages.editor.bottomPanel.self}//li[@title='Show Hidden Elements']
      undo: ${pages.editor.bottomPanel.self}//li[contains(@title,'Undo')]
      redo: ${pages.editor.bottomPanel.self}//li[contains(@title,'Redo')]
      preview: ${pages.editor.bottomPanel.self}//li[contains(@title,'Preview')]
      saveDraft: ${pages.editor.bottomPanel.self}//li//span[text()='Save Draft']
      update: ${pages.editor.bottomPanel.self}//li//span[text()='Update']
      saveDraftButton: ${pages.editor.bottomPanel.self}//button
      saveMenu:
        self: //div[contains(@class,'brz-ed-tooltip__content-portal')]
        menuItems: ${pages.editor.bottomPanel.saveMenu.self}//div[contains(@class,'brz-ed-tooltip__item')]//span
        clearLayout: ${pages.editor.bottomPanel.saveMenu.self}//span[@title='Clear Layout']
        saveLayout: ${pages.editor.bottomPanel.saveMenu.self}//span[@title='Save Layout']
        publishPage: ${pages.editor.bottomPanel.saveMenu.self}//span[@title='Publish Page']
        switchToDraft: ${pages.editor.bottomPanel.saveMenu.self}//span[@title='Switch to Draft']
    sidebar:
      self: //div[contains(@class,'brz-ed-sidebar')]
      cms: ${pages.editor.sidebar.self}//div[@title='CMS']
      addItems:
        self: ${pages.editor.sidebar.self}//div[@title='Add Elements']
        content:
          self: //div[contains(@class,'brz-ed-sidebar__content')]
          header:
            self: ${pages.editor.sidebar.addItems.content.self}//div[contains(@class,'brz-ed-sidebar__header')]
          main:
            self: ${pages.editor.sidebar.addItems.content.self}//div[contains(@class,'brz-ed-sidebar__main')]
            columns: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='columns']
            row: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='row']
            text: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='text']
            image: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='image']
            button: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='button']
            icon: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='icon']
            spacer: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='spacer']
            map: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='map']
            form: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='form']
            gallery: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='imageGallery']
            line: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='line']
            lottie: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='lottie']
            rating: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='starRating']
            menuSimple: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='MenuSimple']
            translation: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='translation']
            video: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='video']
            audio: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='audio']
            iconText: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='iconText']
            embedCode: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='embedCode']
            alert: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='Alert']
            counter: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='counter']
            countdown2: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='countdown2']
            progressBar: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='progressBar']
            calendly: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='Calendly']
            carousel: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='carousel']
            tabs: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='tabs']
            accordion: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='accordion']
            postTitle: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='PostTitle']
            posts: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='Posts']
            assetsPosts: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='AssetsPosts']
            playlist: ${pages.editor.sidebar.addItems.content.self}//div[@data-brz-sortable-subtype='videoPlaylist']
    editorPopUp:
      self: //div[contains(@class,'brz-ed-popup-two-wrapper brz-ed-popup-two-blocks')]
      header:
        self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-header')]
        search: ${pages.editor.editorPopUp.self}//input[contains(@class,'brz-input brz-ed-popup-two__input')]
        tabs:
          self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-tab-item')]
          tab:
            icon: //div[contains(@class,'brz-ed-popup-two-tab-icon')]
            name: //div[contains(@class,'brz-ed-popup-two-tab-name')]
      body:
        self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-body')]
        sidebar:
          self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-body__sidebar')]
        content:
          self: ${pages.editor.editorPopUp.self}//div[contains(@class,'brz-ed-popup-two-body__content')]
          createYourOwn: //p[text()='Create your own']
  publish:
    section:
      self: //div[contains(@class,'brz-root__container')]//section
      container:
        self: //div[contains(@class,'brz-container')]
        item:
          self: ${pages.publish.section.container.self}//div[contains(@class,'brz-wrapper')]
          gallery:
            self: //div[@class='brz-image__gallery' and @data-brz-custom-id]
          form:
            self: //form
            field:
              text: //input[@data-brz-type='Text']
              email: //input[@data-brz-type='Email']
              number: //input[@data-brz-type='Number']
              paragraph: //textarea[@data-brz-type='Paragraph']
              select: //div[contains(@class,'brz-forms2__field-select')]//select
              radio:
                self: //div[contains(@class,'brz-forms2__radio-options')]
                items: //div[contains(@class,'brz-control__radio-option')]
              checkBox:
                self: //div[contains(@class,'brz-forms2__checkbox-options')]
                items: //div[contains(@class,'brz-control__check-group-option')]
              date: //input[@data-brz-type='Date']
              url: //input[@data-brz-type='Url']
              time: //input[@data-brz-type='Time']
              file: //input[@data-brz-type='FileUpload']
              tel: //input[@data-brz-type='Tel']
              password: //input[@data-brz-type='Password']
