name: Automatically run UI tests from foreign repo

on:
  workflow_dispatch:
    inputs:
      baseUrl:
        required: true
        description: Preview Cloud url
        type: string
      repoPrId:
        required: true
        description: The foreign repo pr id
        type: string
      isClean:
        required: false
        description: Need to be clean or generate

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  run_tests:
    runs-on: [ self-hosted, builder, office-server ]
    if: ${{ github.event.inputs.isClean != true }}

    steps:
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.9.3

      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: adopt
          cache: maven

      - name: Compile and install dependencies
        run: mvn -T 4C clean compile install -DskipTests

      - name: Download playwright dependencies
        run: mvn -T 4C exec:java -pl web-test -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install-deps"

      - name: Run tests
        run: mvn -T 4C test -DbaseUrl=${{ github.event.inputs.baseUrl }} -Dcucumber.filter.tags=@Smoke

      - name: Build executor properties
        if: always()
        run: |
          echo '{"name":"GitHub Actions","type":"github","reportName":"Brizy Regression run",' > executor.json
          echo "\"url\":\"https://bagrinsergiu.github.io/brizy-atf\"," >> executor.json # ???
          echo "\"reportUrl\":\"https://bagrinsergiu.github.io/brizy-atf/${{ github.run_number }}/\"," >> executor.json
          echo "\"buildUrl\":\"hhttps://github.com/bagrinsergiu/brizy-atf/actions/runs/${{ github.run_id }}\"," >> executor.json
          mv ./executor.json ./web-test/target/allure-results

      - name: Generate allure reports
        if: always()
        run: mvn -pl web-test allure:report

      - name: Declare Report variables
        id: vars
        if: always()
        shell: bash
        run: |
          echo "CONTAINER_NAME=atf-report-pr-${{ github.event.inputs.repoPrId }}" >> $GITHUB_OUTPUT
          echo "IMAGE=brizy/atf-report:pr-${{ github.event.inputs.repoPrId }}" >> $GITHUB_OUTPUT
          echo "NETWORK=traefik" >> $GITHUB_OUTPUT
          echo "DOMAIN=atf-pr-${{ github.event.inputs.repoPrId }}.cloud.office.brizy.org" >> $GITHUB_OUTPUT

      - name: Build Report Container
        id: build-image
        if: always()
        shell: bash
        run: |
          docker stop "${{ steps.vars.outputs.CONTAINER_NAME }}" || true
          docker rm "${{ steps.vars.outputs.CONTAINER_NAME }}" || true
          docker rmi "${{ steps.vars.outputs.IMAGE }}" || true

          docker build \
          -t "${{ steps.vars.outputs.IMAGE }}" \
          -f dockerfiles/Dockerfile .
          
          docker run -d \
            --network="${{ steps.vars.outputs.NETWORK }}" \
            --network-alias="${{ steps.vars.outputs.CONTAINER_NAME }}" \
            --name="${{ steps.vars.outputs.CONTAINER_NAME }}" \
            --cpus=3 \
            --memory=2g \
            -e "MAX_CPUS=2" \
            --label "traefik.docker.network"="${{ steps.vars.outputs.NETWORK }}" \
            --label "traefik.enable"="true" \
            --label "traefik.frontend.rule"="Host:${{ steps.vars.outputs.DOMAIN }}" \
            --label "traefik.port"="80" \
            "${{ steps.vars.outputs.IMAGE }}"

      - name: Generate Report Url
        uses: marocchino/sticky-pull-request-comment@v2
        if: always()
        with:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          message: |
            Report: <http://${{ steps.vars.outputs.DOMAIN }}:8080>

  cleanup:
    name: Cleanup Reports
    runs-on: [ self-hosted, builder, office-server ]
    if: ${{ github.event.inputs.isClean == true }}
    steps:
      - uses: actions/checkout@v3

      - name: Declare Report variables
        id: vars
        shell: bash
        run: |
          echo "CONTAINER_NAME=atf-report-pr-${{ github.event.inputs.repoPrId }}" >> $GITHUB_OUTPUT
          echo "IMAGE=brizy/atf-report:pr-${{ github.event.inputs.repoPrId }}" >> $GITHUB_OUTPUT

      - name: Clean Report
        id: clean
        shell: bash
        run: |
          docker stop "${{ steps.vars.outputs.CONTAINER_NAME }}" || true
          docker rmi --force "${{ steps.vars.outputs.IMAGE }}" || true

      - name: Generate Report Url
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          message: |
            Report: Not available

#      - name: Attach Report to foreign repo
#        uses: marocchino/sticky-pull-request-comment@v2
#        with:
#          repo: blox-editor
#          number: ${{ github.event.inputs.repoPrId }}
#          message: |
#            E2E Report: https://bagrinsergiu.github.io/brizy-atf/${{ github.run_number }}/index.html
